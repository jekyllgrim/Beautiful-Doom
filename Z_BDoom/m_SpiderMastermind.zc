Class BD_SpiderMastermind : BdoomMonster {
	Default	{	
		species "SpiderMastermind";
		+DOHARMSPECIES
		Health 3000;
		Radius 128;
		Height 100;
		Mass 1000;
		Speed 12;
		PainChance 40;
		Monster;
		+BOSS
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		SeeSound "spider/sight";
		PainSound "spider/pain";
		DeathSound "spider/death";
		ActiveSound "spider/active";
		Obituary "$OB_SPIDER";
		Tag "$FN_SPIDER";
	}
	void DyingSpark() {
		if (bdoom_blood) {
			for (int i = 3; i > 0; i--)
				A_SpawnItemEx("Blood",frandom(-10,10),frandom(-10,10),frandom(64,80),frandom(-6,6),frandom(-6,6),frandom(3,7),SXF_SETTARGET,failchance:64);
		}
		if (bdoom_debris) {
			for (int i = random(10,20); i > 0; i--)
				A_SpawnItemEx("BD_RicochetSpark",0,frandom(-16,16),frandom(48,70),frandom(-4,4),frandom(-4,4),frandom(4,8),failchance:64);
			if (random(0,2) == 2) {
				A_StartSound("spiderdemon/debris",volume:0.5);
				A_SpawnItemEx("BD_BasicMetalPiece",random(-16,16),random(-16,16),frandom(48,70),	frandom(5,8),frandom(-2,2),random(5,10),	frandom(0,359),SXF_SETTARGET);
			}
		}
	}
	
	void ModernSpiderAttack() {
		BD_ModernBulletAttack(
			"BD_SpiderBullet", 
			bulletheight:40, bulletofs_xy:7,
			horz_spread: 5, vert_spread: 1,
			attacksound: "spiderdemon/fire",
			casing: "BD_ChaingunCasing",
			casingX: 12, casingY: -15, casingZ: 40
		);
	}
	
	state SpiderMissileEnd() {
		if (bdoom_weapons == BD_WeaponSet.WS_VANILLA)
			return ResolveState("Missile.Vanilla");
		else if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
			return ResolveState("Missile.Enhanced");
		else if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
			return ResolveState("Missile.Modern");
		return ResolveState(null);
	}
	
	states	{
	Raise:
		stop;
	Death.Fire:
		stop;
	Death.Greenfire:
		stop;
	Death.PlasmaDamage:
		stop;
	Death.BFGSplash:
		stop;
	Spawn: 
		SMMA A 10 A_Look();
		loop;
	see:
		SMMA A 3 a_metal;
		SMMA ABC 3 a_chase;
		SMMA D 3 a_metal;
		SMMA EEF 3 a_chase;
		SMMA G 3 a_metal;
		SMMA HIJ 3 a_chase;
		loop;
	Missile:
		TNT1 A 0 {
			A_FaceTarget();
			A_StartSound("weapons/chaingun/start",slot:CHAN_5,flags:CHANF_DEFAULT,attenuation:1);
		}
		SSMB ABCDEF 1;
		SSMB ABCDEF 1;
		SSMB ACEACEAD 1;
		TNT1 A 0 SpiderMissileEnd();
	Missile.Vanilla:
		SSMA B 1 BD_BulletAttack(22.5, 0, 3, random(1,5)*3,"spider/attack","spiderdemon/fire","BD_ChaingunCasing",12,-15,43,43,10);
		SSMA CAD 1;
		SSMA B 1 BD_BulletAttack(22.5, 0, 3, random(1,5)*3,"spider/attack","spiderdemon/fire","BD_ChaingunCasing",12,-15,43,43,10);
		SSMA CAD 1;
		SSMA D 1 A_SpidRefire;
		TNT1 A 0 SpiderMissileEnd();
		loop;
	Missile.Enhanced: //firing twice as fast but per-shot damage is approximately halved 
		SSMA B 1 BD_BulletAttack(22.5, 0, 3, random(1,5)*1.5,"spider/attack","spiderdemon/fire","BD_ChaingunCasing",12,-15,43,43,10);
		SSMA A 1;
		SSMA B 1 BD_BulletAttack(22.5, 0, 3, random(1,5)*1.5,"spider/attack","spiderdemon/fire","BD_ChaingunCasing",12,-15,43,43,10);
		SSMA A 1;
		SSMA D 1 A_SpidRefire;
		TNT1 A 0 SpiderMissileEnd();
		loop;
	Missile.Modern:
		SSMA B 1 ModernSpiderAttack();
		SSMA A 1;
		SSMA B 1 ModernSpiderAttack();
		SSMA A 1;
		SSMA D 1 A_SpidRefire;
		TNT1 A 0 SpiderMissileEnd();
		loop;
	pain:
		SPMA a 2;
		SPMA b 2;
		SPMA c 2 a_pain;
		goto see;	
	death:
		TNT1 A 0 {
			if (bdoom_gibs && !bdoom_nobossgibs)
				return ResolveState("Death.Particles");
			return ResolveState(null);
		}
		SDMA a 20 a_scream;
		SDMA b 5 a_noblocking;
		SDMA c 5;
		SDMA defghijklmnopq 4;
		SDMA r 30;
		SDMA r -1 a_bossdeath;
		stop;
	Death.Particles:
		TNT1 A 0 A_StartSound("spiderdemon/shutdown",CHAN_VOICE);
		SPMA ABCA 5 DyingSpark();
		TNT1 A 0 A_NoBlocking;
		SMMA A 5;
		SPMA ABCBA 5 DyingSpark();
		SMMA A 10;
		SPIX ABCDEF 5 DyingSpark();	
		TNT1 A 0 {
			A_StartSound("spiderdemon/explosion",attenuation:ATTN_NONE);
			A_SpawnItemEx("BD_SpiderExplosion",0,0,72);
			
			A_FaceTarget();
			A_SpawnItemEx("BD_SpiderBrainLeft",0,-16,64, frandom(-1.5,1.5),frandom(-3.5,-5.5),frandom(4,6),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderBrainRight",0,16,64, frandom(-1.5,1.5),frandom(3.5,5.5),frandom(4,6),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderBrainMid",-16,0,64, frandom(-3.5,-5.5),frandom(-1.5,1.5),frandom(4,6),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderFace",16,0,64, frandom(3.5,5.5),frandom(-1.5,1.5),frandom(4,6),flags:SXF_SETTARGET);
			
			A_SpawnItemEx("BD_SpiderLegLeft",16,-48,60, frandom(2,3),frandom(-4.5,-5.5),frandom(7,9),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderLegLeft",-16,-48,60, frandom(-2,-3),frandom(-4.5,-5.5),frandom(7,9),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderLegRight",16,48,60, frandom(2,3),frandom(4.5,5.5),frandom(7,9),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderLegRight",-16,48,60, frandom(-2,-3),frandom(4.5,5.5),frandom(7,9),flags:SXF_SETTARGET);
			
			A_SpawnItemEx("BD_SpiderHandLeft",0,-16,64, frandom(-1.5,1.5),frandom(-3,-4.5),frandom(6,7),flags:SXF_SETTARGET);
			A_SpawnItemEx("BD_SpiderHandRight",0,16,64, frandom(-1.5,1.5),frandom(3,4.5),frandom(5,7),flags:SXF_SETTARGET);
			
			for (int i = 10; i > 0; i--)
				A_SpawnItemEx("BD_BFountainSpray",frandom(-5.0,5.0),frandom(-5.0,5.0),random(24,72),frandom(-1.5,1.5),frandom(-1.5,1.5),frandom(4.5,6.5),0,SXF_SETTARGET,36);
			for (int i = 6; i > 0; i--)
				A_SpawnItemEx("BD_BasicMeatPiece_Heavy",random(-4,4),random(-4,4),random(24,72),	frandom(-5,5),frandom(-5,5),random(5,8),	0,	SXF_SETTARGET, 64);
			for (int i = 15; i > 0; i--)
				A_SpawnItemEx("BD_BasicMetalPiece",random(-4,4),random(-4,4),random(24,72),		frandom(-10,10),frandom(-10,10),random(5,10),	0,SXF_SETTARGET, 64);
			for (int i = 8; i > 0; i--)
				A_SpawnItemEx("BD_SpiderMetalPiece",random(-4,4),random(-4,4),random(24,72),		frandom(-10,10),frandom(-10,10),random(5,10),	0,SXF_SETTARGET, 64);
			A_SpawnItemEx("BD_SpiderGunGib",16,0,50, frandom(3.5,5.5),frandom(-1.5,1.5),frandom(4,6),flags:SXF_SETTARGET);
		}
		TNT1 A 30;
		TNT1 A 1 A_BossDeath;
		stop;
	}
}

Class BD_SpiderExplosion : Actor {
	Default {
		+NOINTERACTION
		+NOGRAVITY
		renderstyle "Add";
		alpha 0.9;
		scale 0.7;
	}
	states {
	Spawn:
		TNT1 A 0 NoDelay {
			if (bdoom_shakes)
				A_Quake(4,40,0,1100,"");
		}
		BOM1 ABCDEFGHIJKLMNOPQRSTUVWX 2;
		stop;
	}		
}
