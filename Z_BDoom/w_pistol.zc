Class BD_Pistol : BDoomWeapon {
	private bool firedright; //check which gun was fired in dual wielding mode (Enhanced Guns)
	Default {
		Obituary "$OB_MPPISTOL";
		+WEAPON.WIMPY_WEAPON
		+WEAPON.NO_AUTO_SWITCH
		Inventory.Pickupmessage "$PICKUP_PISTOL_DROPPED";
		Inventory.Pickupsound "weapons/pistol/pickup";
		Tag "$TAG_PISTOL";
		weapon.selectionorder 190;
		inventory.icon "PISTZ0";
		weapon.slotnumber 2;
		weapon.ammotype1 		"Clip";
		weapon.ammouse1 		1;
		weapon.ammogive1	 	10;
		BDoomWeapon.magammo	"BD_PistolClip";
		weapon.ammotype2 		"Clip";
		weapon.ammouse2 		1;
		weapon.ammogive2		0;
		inventory.amount		1;
		inventory.maxamount		2;
		BDoomWeapon.AutoReloadTime 120;
		BDoomWeapon.reloadsound "Mweapons/pistol/clipin";
	}
	override void DoEffect() {
		Super.DoEffect();
		if (!owner)
			return;
		if(bdoom_weapons == BD_WeaponSet.WS_MODERN) {			
			AmmoUse2 = 0;
			bNOAUTOFIRE = true;
			bAMMO_OPTIONAL = true;
		}
		else {
			AmmoUse2 = 1;
			bNOAUTOFIRE = false;
			bAMMO_OPTIONAL = false;
		}
		if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED && CountInv("BD_Pistol") > 1)
			icon = texman.CheckForTexture("PISDZ0", TexMan.Type_Any);
		else
			icon = texman.CheckForTexture("PISTZ0", TexMan.Type_Any);
	}	
	states {
	Spawn:
		PIST Z 1 {		
			if(bdoom_weapons == BD_WeaponSet.WS_ENHANCED && bdoom_replaceweapons) { 
				A_SetRenderstyle(alpha,STYLE_Normal); 
				bSPECIAL = true;
			}
			else { 
				A_SetRenderstyle(alpha,STYLE_None); 
				bSPECIAL = false;
			}
		}
		loop;
// VANILLA
	Ready:
		PI0G A 1 {
			if (bdoom_weapons==2)
				return ResolveState("Ready.Modern");
			else if (bdoom_weapons==1)
				return ResolveState("Ready.Enhanced");
			BD_SetSprite("PI0G","QI0G");
			BD_ClearPsprite(PSP_GUN2,PSP_GUN3);
			A_WeaponReady(WRF_NOSECONDARY);
			return ResolveState(null);
		}
		Loop;
	Deselect:
		TNT1 A 0 {
			BD_ClearPsprite(PSP_GUN2,PSP_GUN3);
			if (bdoom_weapons==2)
				return ResolveState("Deselect.Modern");
			else if (bdoom_weapons==1)
				return ResolveState("Deselect.Enhanced");
			BD_SetSprite("PI0G","QI0G");
			return ResolveState(null);
		}
		#### A 1 A_Lower();
		wait;
	Select:
		TNT1 A 0 {
			if (bdoom_weapons==2)
				return ResolveState("Select.Modern");
			else if (bdoom_weapons==1)
				return ResolveState("Select.Enhanced");
			BD_SetSprite("PI0S","QI0S");
			return ResolveState(null);
		}
		#### ABCDEE 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	Fire: //fire 14 tics, refire 5 tics;
		PI0F A 3 {
			if (bdoom_weapons==2)
				return ResolveState("Fire.Modern");
			else if (bdoom_weapons==1)
				return ResolveState("Fire.Enhanced");
			BD_SetSprite("PI0F","QI0F");
			A_gunflash("Flash");
			BD_FireBullets(5.6, 0, 1, 5, "weapons/pistol");
			return ResolveState(null);
		}
		TNT1 A 0 BD_SetSprite("PI0G","QI0G");
		#### ABCD 1;
		#### A 0 { 
			if( bdoom_debris)
				A_Eject("BD_PistolCasing",20,1.0,6.5,frandom(0,2),FRandom(1,3),frandom(4,5));
		}
		#### EF 2;
		#### A 3 ;
		#### A 0 A_ReFire();
		#### A 5; 
		Goto Ready;
	Flash:
		TNT1 A 3 {
			A_Light1();
			if(!invoker.c_muzzle)
				A_Overlay(PSP_EFLASH,"FlashVanilla");
			else {
				DrawMuzzleSmoke((0,10), sAlpha: bdoom_weapons == BD_WeaponSet.WS_MODERN ? 0.45 : 0.7);
				A_Overlay(PSP_EFLASH,"FlashEnhanced");
				A_Overlay(PSP_MFLASH,"FlashMuzzle");
				if (bdoom_weapons != 2)
					A_OverlayOffset(PSP_MFLASH,0,8);
				if (random(0,1) == 1) 
					A_OverlayFlags(PSP_MFLASH,PSPF_FLIP,true);
			}
			A_OverlayFlags(PSP_EFLASH,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
			A_OverlayFlags(PSP_MFLASH,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
			A_OverlayRenderstyle(PSP_EFLASH,STYLE_Add);
			A_OverlayRenderstyle(PSP_MFLASH,STYLE_Add);
			if (bdoom_weapons > BD_WeaponSet.WS_VANILLA)
				A_OverlayFlags(PSP_EFLASH,PSPF_FLIP|PSPF_MIRROR,true);
			if (bdoom_weapons == BD_WeaponSet.WS_MODERN) {
				A_OverlayOffset(PSP_EFLASH,0,-8,WOF_ADD);
				A_SetTics(1);
			}
		}
		TNT1 A 1 {
			if (bdoom_weapons == BD_WeaponSet.WS_MODERN) {
				BD_ClearPsprite(PSP_EFLASH,PSP_MFLASH);
				return ResolveState("LightDone");
			}
			A_light1();
			return ResolveState(null);
		}
		goto lightdone;
	FlashVanilla:
		PI0L A 3 bright {
			if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
				A_SetTics(1);
		}
		stop;		
	FlashEnhanced:
		PI0L B 1 bright;
		PI0L B 1 bright A_OverlayAlpha(PSP_EFLASH,0.66);
		PI0L B 1 bright A_OverlayAlpha(PSP_EFLASH,0.33);
		stop;
	FlashMuzzle:
		MUZ1 A 1 bright {
				let fl = player.FindPSprite(OverlayID());
				fl.frame = random(0,3);
			}
		MUZ1 # 1 bright A_OverlayAlpha(PSP_MFLASH,0.8);
		stop;

//ENHANCED		
	Ready.Enhanced:
		PIBN A 1 {
			BD_SetSprite("PIBN","QIBN");
			if (CountInv("BD_Pistol") > 1) {
				A_Overlay(PSP_GUN2,"Sidegun.Dual",0);
				A_WeaponReady();
			}
			else
				A_WeaponReady(WRF_NOSECONDARY);
		}				
		goto ready;
	Select.Enhanced:
		TNT1 A 0 {
			A_StartSound("weapons/pistol/draw");
			if (CountInv("BD_Pistol") > 1)
				return ResolveState("Select.Dual");
			BD_SetSprite("PIBS","QIBS");
			return ResolveState(null);
		}
		#### BCDE 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	Select.Dual:
		TNT1 A 0 BD_SetSprite("PI2S","QI2S");
		#### ABCDE 1 A_WeaponReady(WRF_NOFIRE);
		goto ready;
	Deselect.Enhanced:
		TNT1 A 0 {
			if (CountInv("BD_Pistol") > 1)
				BD_SetSprite("PI2G","QI2G");
			else
				BD_SetSprite("PIBN","QIBN");
		}
		#### # 1 A_Lower(12);
		wait;
	Sidegun.Dual:
		PI2N A 20 BD_SetSprite("PI2N","QI2N");
		stop;
	Fire.Enhanced:
		PIBF A 3 {
			BD_SetSprite("PIBF","QIBF");
			if (CountInv("BD_Pistol") > 1)
				A_Overlay(PSP_GUN2,"Sidegun.Dual",0);
			A_gunflash("Flash");
			BD_FireBullets(5.6, 0, 1, 5, "weapons/pistol/fire");
		}
		TNT1 A 0 BD_SetSprite("PIBN","QIBN");
		#### ABCD 1;
		#### A 0 { 
			If(bdoom_debris)
				A_Eject("BD_PistolCasing",20,1.0,6.5,frandom(0,2),FRandom(1,3),frandom(4,5));
		}
		#### EF 2;
		#### A 1 ;
		#### A 5 A_ReFire("Fire.Enhanced");		
		goto ready;
	AltFire:
		TNT1 A 0 {
			BD_ClearPsprite(PSP_GUN2,PSP_GUN3);
			BD_SetSprite("PIDC","QIDC");
		}
		#### ABCD 1;
	AltFireDo:
		TNT1 A 7 {
			if (invoker.firedright) {
				A_Overlay(PSP_GUN2,"SideGunFire");
				A_OverlayFlags(PSP_GUN2,PSPF_FLIP|PSPF_MIRROR,true);
				let s1 = player.findPSprite(PSP_GUN3);
				if (!s1)
					A_Overlay(PSP_GUN3,"SideGunWait");
				invoker.firedright = false;
			}
			else {
				let s2 = player.findPSprite(PSP_GUN2);
				if (!s2) {
					A_Overlay(PSP_GUN2,"SideGunWait");
					A_OverlayFlags(PSP_GUN2,PSPF_FLIP|PSPF_MIRROR,true);
				}
				A_Overlay(PSP_GUN3,"SideGunFire");
				invoker.firedright = true;
			}
		}
		TNT1 A 5 A_ReFire("AltFireDo");
		TNT1 A 0 {
			BD_ClearPsprite(PSP_GUN2,PSP_GUN3);
			BD_SetSprite("PIDC","QIDC");
		}
		#### DCB 2;
		goto ready;	
	SideGunFire:
		PIDF A 2 {
			A_StartSound("weapons/pistol/fire");
			A_gunflash("AltFlash");
			BD_SetSprite("PIDF","QIDF");	
			double ofs = 7.9;
			if (invoker.firedright)
				ofs *= -1;
			BD_FireBullets(5, 1.5, -1, 5, pufftype: "BD_EnBulletPuff",spawnheight:2,spawnofs:ofs);
		}
		#### BC 1;
		#### DE 1;
		#### D 1 { 
			If(bdoom_debris) {
				if (invoker.firedright)
					A_Eject("BD_PistolCasing",20,9,6,frandom(0,2),FRandom(1,3),frandom(4,5));
				else
					A_Eject("BD_PistolCasing",20,-9,6,frandom(0,2),FRandom(1,3),frandom(4,5));
			}
		}
		#### CBA 1;
		PIDN A 1 {
			BD_SetSprite("PIDN","QIDN");
		}
		wait;
	SideGunWait:
		PIDN A 1 BD_SetSprite("PIDN","QIDN");
		loop;
	AltFlash:
		TNT1 A 2 {
			A_Light1();
			if(!invoker.c_muzzle)
				A_Overlay(PSP_EFLASH,"AltFlashVanilla");
			else {
				double xofs = invoker.firedright ? -37 : 37;
				DrawMuzzleSmoke((xofs, 6), fade: 0.8, sVSpeed: 1.6);
				A_Overlay(PSP_EFLASH,"AltFlashEnhanced");
				A_Overlay(PSP_MFLASH,"AltFlashMuzzle");
				A_OverlayOffset(PSP_MFLASH,40,0);
				if (random(0,1) == 1) 
					A_OverlayFlags(PSP_MFLASH,PSPF_FLIP,true);
			}
			A_OverlayFlags(PSP_EFLASH,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
			A_OverlayFlags(PSP_MFLASH,PSPF_RENDERSTYLE|PSPF_ALPHA|PSPF_FORCEALPHA,true);
			A_OverlayRenderstyle(PSP_EFLASH,STYLE_Add);
			A_OverlayRenderstyle(PSP_MFLASH,STYLE_Add);
			if (invoker.firedright) {
				A_OverlayFlags(PSP_EFLASH,PSPF_FLIP|PSPF_MIRROR,true);
				A_OverlayFlags(PSP_MFLASH,PSPF_MIRROR,true);
			}
		}
		TNT1 A 1 A_light1();
		goto lightdone;
	AltFlashVanilla:
		PIDL A 2 bright;
		stop;		
	AltFlashEnhanced:
		PIDL B 1 bright;
		PIDL B 1 bright A_OverlayAlpha(PSP_EFLASH,0.5);
		stop;
	AltFlashMuzzle:
		MUZ1 A 1 bright {
				let fl = player.FindPSprite(OverlayID());
				fl.frame = random(0,3);
			}
		MUZ1 # 1 bright A_OverlayAlpha(PSP_MFLASH,0.8);
		//MUZ1 # 1 bright A_OverlayAlpha(PSP_MFLASH,0.4);
		stop;
// MODERN GUNS

	Ready.Modern:
		PIMN A 1 {
			BD_ClearPsprite(PSP_GUN2,PSP_GUN3);			
			BD_WeaponReady();
			if (countinv("BD_PistolClip") < 1)
				BD_SetSprite("PIMT","QIMT");
			else
				BD_SetSprite("PIMN","QIMN");
		}
		goto ready;
	DryReload:
		PIMT A 8 {
			BD_SetSprite("PIMT","QIMT");
			A_StartSound("Mweapons/dry");
		}
		goto reload;
	Select.Modern:
		PIMN A 0 {
			A_StartSound("weapons/pistol/draw");			
			if (countinv("BD_PistolClip") <= 0)
				BD_SetSprite("QIMT","PIMT");
			else			
				BD_SetSprite("PIMN","QIMN");
		}
		#### A 1 A_Raise(12);
		wait;
	Deselect.Modern:
		PIMN A 0 {	
			if (countinv("BD_PistolClip") <= 0)
				BD_SetSprite("QIMT","PIMT");
			else			
				BD_SetSprite("PIMN","QIMN");
		}
		#### # 1 A_Lower(12);
		wait;
	Fire.Modern:
		#### # 0 A_JumpIfNoAmmo("DryReload");
		PIMF A 1 {
			BD_SetSprite("PIMF","QIMF");
			A_gunflash();
			BD_FireModernBullet("BD_PistolBullet", 1.9, 1.3);
			//A_FireBullets(1.9,1.3,-1,0,"BD_NullPuff",FBF_USEAMMO|FBF_NORANDOMPUFFZ,0,"BD_PistolBullet",2,0);
			A_StartSound("Mweapons/pistol/fire",slot:CHAN_BODY);
			A_ZoomFactor(0.994,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			BD_SetPitch(pitch-frandom(0.6,0.7),SPF_INTERPOLATE);
		}
		TNT1 A 0 {
			A_ZoomFactor(1,ZOOM_NOSCALETURNING);
			BD_SetSprite("PIMN","QIMN");
		}
		#### ABC 1;
		#### A 0 { 
			If(bdoom_debris)
				A_Eject("BD_PistolCasing",20,1.0,6.5,frandom(0,2),FRandom(1,3),frandom(4,5));
			if (countinv("BD_PistolClip") < 1)
				return ResolveState("FireEnd.Empty");
			return ResolveState(null);
		}
		#### DEF 2 BD_WeaponReady();
		goto ready.Modern;
	FireEnd.Empty:
		TNT1 A 0 BD_SetSprite("PIMN","QIMN");
		#### DCB 2;
		PIMT A 2 BD_SetSprite("PIMT","QIMT");
		goto Ready.Modern;
	Reload:
		TNT1 A 0 {
			if (CountInv("Clip") == 0)
				return ResolveState("Ready");
			If(CountInv("BD_PistolClip") == 0) {
				invoker.wasempty = true;	//this defines whether to show dry reload sprites or regular ones
				BD_SetSprite("PIME","QIME");
			}
			else
				BD_SetSprite("PIMR","QIMR");
			return ResolveState(null);
		}
		#### ABCD 1;
		#### # 0 A_StartSound("Mweapons/pistol/clipout",slot:CHAN_5);
		#### EFG 2 A_WeaponOffset(-0.3,1,WOF_ADD);
		#### DDDD 3 A_WeaponOffset(-0.2,0.25,WOF_ADD);
		#### HI 2 A_WeaponOffset(2.55,-2,WOF_ADD);
		#### # 0 {
			A_StartSound("Mweapons/pistol/clipin",slot:CHAN_5);
			if (!invoker.wasempty)
				BD_Reload();
		}
		#### JK 2;
		#### L 5 ;
		TNT1 A 0 {
			If(!invoker.wasempty)
				return ResolveState("ReloadEnd");
			return ResolveState(null);	//if reload was dry, move the slide
		}
		TNT1 A 0 {
			A_StartSound("Mweapons/pistol/cock");
			BD_SetSprite("PIME","QIME");
		}
		#### MNOOOO 1;
		TNT1 A 0 BD_Reload();
	ReloadEnd:
		TNT1 A 0 {
			invoker.wasempty = false;
			BD_SetSprite("PIMR","QIMR");
		}
		#### MNOP 1;
		PIMN A 1 BD_SetSprite("PIMN","QIMN");
		goto Ready.Modern;
	}
}


Class BD_PistolClip : Ammo {
	Default {
		inventory.icon "HBULZ0";
		inventory.maxamount 15;
		ammo.backpackamount 0;
		ammo.backpackmaxamount 15;
		+INVENTORY.IGNORESKILL
	}
}