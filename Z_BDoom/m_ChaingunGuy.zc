Class BD_ChaingunGuy : BDoomMonster {
	private bool attacking;
	private state ddeath1;
	Default {
		species "ChaingunGuy";
		+DOHARMSPECIES
		Health 70;
		gibhealth 40;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "none";
		Obituary "$OB_CHAINGUY";
		Tag "$FN_HEAVY";
		Dropitem "Chaingun";
		BdoomMonster.monsterclip 40;
	}
	
	override void PostBeginPlay() {
		super.PostBeginPlay();
		ddeath1 = FindState("Death1");
	}
	
	override void Tick() {
		super.Tick();
		if (isFrozen() || !bdoom_replaceweapons || bdoom_weapons != 2)
			return;
		//if (ppain && InStateSequence(curstate,ppain))
			//console.printf("ouch");
		if (ssee && InStateSequence(curstate,ssee))
			sprite = GetSpriteIndex('RPO1');
		else if (ppain && InStateSequence(curstate,ppain))
			sprite = GetSpriteIndex('RPOG');
		else if (ddeath && InStateSequence(curstate,ddeath))
			sprite = GetSpriteIndex('RPOM');
		else if (ddeath1 && InStateSequence(curstate,ddeath1))
			sprite = GetSpriteIndex('RPON');
		else if (vxdeath && InStateSequence(curstate,vxdeath))
			sprite = GetSpriteIndex('RGIB');
	}
	
	void SetChainguySprite(name spritename) {
		if (bdoom_weapons == BD_WeaponSet.WS_MODERN && bdoom_replaceweapons)
			sprite = GetSpriteIndex(spritename);
	}
	
	void ModernChaingunguyAttack() {
		BD_ModernBulletAttack(
			"BD_ZombieBullet", 
			bulletheight:30, bulletofs_xy:12,
			horz_spread: 20, vert_spread: 1.3,
			attacksound: "Mweapons/rifle/fire",
			casing: "BD_ChaingunCasing",
			casingX: 14, casingY: -15, casingZ: 32
		);
	}
	
	states {
	Spawn:
		CPAS A 10 {
			SetChainguySprite("RPAS");
			A_Look();
		}
		CPAR A 10 {
			SetChainguySprite("RPAR");
			A_Look();
		}
		loop;
	AttackEnd:
		TNT1 A 0 {
			A_StartSound("weapons/chaingun/stop",slot:CHAN_5);
			attacking = false;
		}
	See:
		TNT1 A 0 {
			if (attacking) {
				attacking = false;
				A_StopSound(5);
			}
		}
		CPO1 ABCDDCBA 3 A_Chase();
		loop;
	Missile:
		TNT1 A 0 {
			if (bdoom_replaceweapons && bdoom_weapons == BD_WeaponSet.WS_MODERN)
				return ResolveState("MissileModern");
			if (bdoom_weapons > BD_WeaponSet.WS_VANILLA) {
				A_StartSound("weapons/chaingun/start",slot:CHAN_5);
				attacking = true;
			}
			return ResolveState(null);
		}
		CPAS ABCEE 2 A_FaceTarget();
	MissileLoop:
		CPAS F 2 BD_BulletAttack(22.5, 0, 1, random(1,5)*3, "chainguy/attack", "weapons/chaingun/fire","BD_ChaingunCasing",18,-20,34,32,12);
		CPAS E 2 A_FaceTarget();
		CPAS F 2 BD_BulletAttack(22.5, 0, 1, random(1,5)*3, "chainguy/attack", "weapons/chaingun/fire","BD_ChaingunCasing",18,-20,34,32,12);
		CPAS E 2 A_FaceTarget();
		CPAS E 1 A_MonsterRefire(40,"AttackEnd");
		loop;
	MissileModern:
		RPAS BCDD 2 A_FaceTarget();
	MissileModernDo:
		RPAS E 1 ModernChaingunguyAttack();
		RPAS FD 2 A_FaceTarget();
		TNT1 A 0 BD_Refire(4,"MissileModernEnd");
		goto MissileModernDo;
	MissileModernEnd:
		RPAS DCB 3;
		goto See;
	Reload:
		TNT1 A 0 {
			bFRIGHTENED = true;
			A_StartSound("Mweapons/rifle/clipout");
			monsterclip = 32;
		}
		RPO1 ABCDDCBA 3 A_Chase(null,null);
		RPO1 ABCDDCBA 3 A_Chase(null,null);
		TNT1 A 0 A_StartSound("Mweapons/rifle/clipin");
		RPO1 ABCDDCBA 3 A_Chase(null,null);
		TNT1 A 0 { bFRIGHTENED = false; }
		goto see;
	Pain:
		TNT1 A 0 {
			if (attacking && bdoom_weapons != 2) {
				attacking = false;
				A_StopSound(CHAN_5);
				//A_StartSound("weapons/chaingun/stop",slot:CHAN_5);
			}
		}
		CPOG a 3;
		CPOG b 3 a_pain();
		goto see;
	Death: //vanilla
		TNT1 A 0 {
			if (attacking && bdoom_weapons != 2) {
				attacking = false;
				A_StopSound(CHAN_5);
			}
			if (!burning && hitheight > default.height*0.75) {
				return ResolveState("DeathHeadshot");
			}
			return A_Jump(256,"Death.Vanilla", "Death1", "Death2");
		}
	Death.Vanilla:
		CPOM a 3 BD_Bleed();
		CPOM b 3 A_scream();
		CPOM c 3 BD_Bleed();
		CPOM de 2 BD_Bleed();
		CPOM f 3 A_NoBlocking();
		CPOM ghi 3;
		CPOM jklM 2;
		goto deathbleed;
	Death1: //fall backwards
		CPON A 3 A_scream();
		CPON B 3;
		CPON C 3 A_NoBlocking(); 
		CPON D 3;
		CPON EFG 2;
		CPON GHI 2 BD_Bleed();
		CPON JK 2;
		goto deathbleed;
	Death2: //fall forward
		CPOO ABCEFGHJ 3;
		TNT1 A 0 {
			A_Scream();
			A_NoBlocking();
		}
		CPOO KLM 4;
		CPOO N 4 A_StartSound("body/fall",slot:CHAN_AUTO);
		CPOO OPQRST 4;
		goto deathbleed;
	DeathHeadshot:
		CPP1 A 3;
		CPP1 B 5 A_StartSound("gibs/gibbed",volume:0.5);
		TNT1 A 0 A_NoBlocking();
		CPP1 EFGHJ 4;
		CPP1 KLM 4;
		CPP1 N 4 A_StartSound("body/fall",slot:CHAN_AUTO);
		CPP1 OPQRSTUVWXYZ 3 A_StartSound("gibs/bloodspurt",CHANF_NOSTOP);
		CPP2 ABCDEFGHIJ 3 A_StartSound("gibs/bloodspurt",CHANF_NOSTOP);
		goto deathbleed;
	Death.Saw:
		CPOY ABCDE 2;
		TNT1 A 0 A_NoBlocking();
		CPOY FGH 2;
		CPOY IJKLMN 3 {
			if(bdoom_blood) {
				A_FaceTarget();
				if (bdoom_blood)
					A_SpawnItemEx("BD_Blood",	frandom(-4,4),frandom(0,6),frandom(28,36),frandom(2,4),0,frandom(4,6),	random(-80,-90),SXF_SETTARGET,80);
			}
		}
		CPOY O 3 {
			A_StartSound("gibs/meatland",slot:CHAN_AUTO);
			A_StartSound("body/fall",slot:CHAN_AUTO);
		}
		CPOY P 3;
		CPOY Q 3 {
			A_StartSound("gibs/meatland",slot:CHAN_AUTO);
			//A_StartSound("body/fall",slot:CHAN_AUTO);
		}
		CPOY RS 3;
		goto deathbleed;
	XDeath:
		TNT1 A 0 A_JumpIf(bdoom_gibs == true,"XDeath.Particles");
	XDeath.Vanilla:
		CGIB ab 2;
		CGIB c 2 a_xscream();
		CGIB de 2;
		CGIB f 2 A_NoBlocking();
		CGIB gh 2;
		CGIB ijK 2;
		goto deathbleed;
	LoadSprites:
		RPOM ABCDEFGHIJKLM 0;
		RPON ABCDEFGHIJK 0;
		RGIB ABCDEFGHIJK 0;
		RPAR A 0;
		RPAS ABCDEF 0;
		RPO1 ABCD 0;
		RPOG AB 0;
		stop;
	}
}
