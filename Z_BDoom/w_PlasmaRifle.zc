//***********
// PLASMAGUN
//***********

Class BD_PlasmaRifle : BDoomWeapon {
	double HeatCounter;
	Default {
		+WEAPON.ALT_AMMO_OPTIONAL
		Weapon.SelectionOrder 10;
		Inventory.PickupMessage "$GOTPLASMA";
		Tag "$TAG_PLASMARIFLE";
		inventory.pickupsound "pickups/plasmarifle";
		attacksound "weapons/plasma/railgun";
		Weapon.AmmoType 	"Cell";
		Weapon.AmmoUse 		1;
		Weapon.AmmoGive 		40;
		Weapon.ammotype2 		"Cell";
		weapon.ammouse2		20;
		weapon.ammogive2 	0;
		decal "PlasmaRailSplat";
		weapon.slotnumber 6;
		BDoomWeapon.ClassicIcon "PLASA0";
		BDoomWeapon.ModernIcon "PLAZF0";
	}
	override void DoEffect () {
		super.DoEffect();
		if (!owner || !owner.player)
			return;
		let psp = owner.player.FindPSprite(PSP_WEAPON);
		if (psp && bdoom_weapons == BD_WeaponSet.WS_MODERN && heatcounter > 0)
			heatcounter -= 0.05;
	}	
	states {
		Spawn:
			PLAS A 1 NoDelay A_JumpIf(bdoom_weapons == BD_WeaponSet.WS_MODERN, "Spawn.Modern");
			loop;
		Spawn.Modern:
			PLAZ ABCDEFGHIJKLMNO 1 A_JumpIf(bdoom_weapons != 2, "Spawn");
			loop;
		Select:
			TNT1 A 0 {
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState("Select.Modern");
				If(bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					A_StartSound("weapons/plasma/draw");
				return ResolveState(null);
			}
			PLGS ABCDEF 1 A_WeaponReady(WRF_NOFIRE);
			goto ready;
		Deselect:
			TNT1 A 0 {
				A_ClearRefire();
				A_StopSound(6);
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState("DeSelect.Modern");
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3,PSP_LIGHTS,PSP_HLIGHTS);
				if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					return ResolveState("Deselect.Enhanced");
				return ResolveState(null);
			}
			PLGG A 1 A_lower;
			loop;
		Ready:
			PLGG A 1 {
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState("Ready.Modern");
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3,PSP_LIGHTS,PSP_HLIGHTS);
				if (bdoom_weapons == BD_WeaponSet.WS_VANILLA || invoker.ammo2.amount < 20)
					A_WeaponReady(WRF_NOSECONDARY);
				else
					A_WeaponReady();
				return ResolveState(null);
			}
			loop;
		fire:
			PLGF A 3 {
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState("Fire.Modern");
				A_FireProjectile("Plasmaball",0,1);
				A_GunFlash("Flash1");
				return ResolveState(null);
			}
			TNT1 A 0 A_refire("fire2");
			goto FireEnd;
		fire2:
			PLGF B 3 {
				A_FireProjectile("Plasmaball",0,1);
				A_GunFlash("Flash2");
			}
			TNT1 A 0 A_refire("fire3");
			goto FireEnd;
		fire3:
			PLGF C 3 {
				A_FireProjectile("Plasmaball",0,1);
				A_GunFlash("Flash3");
			}
			TNT1 A 0 A_refire("fire");
		FireEnd:
			TNT1 A 0 BD_SetSprite("PLGC","QLGC");
			#### BCD 1;
			#### A 0 {
				If(bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					A_StartSound("weapons/plasma/cool");
			}
			#### EEEEEEEEEEEEE 1 DrawMuzzleSmoke((frandom[sfx](-112,-82),frandom[sfx](-30,50)), salpha: 0.3, svspeed: frandom[sfx](1.2,1.4), sScale: frandom[sfx](0.8,1.25), drawOver: true);
			#### DCB 1;
			PLGC A 1;
			goto ready;
		Flash1:
			PZ11 A 1 bright {
				A_Light1();
				if (random(0,1) == 1) {
					let psp = Player.FindPSprite(OverlayID());
					if (psp)
						psp.sprite = GetSpriteIndex("PZ12");
				}			
			}
			#### BC 1 bright;
			goto lightdone;
		Flash2:
			PZ21 A 1 bright {
				A_Light1();
				if (random(0,1) == 1) {
					let psp = Player.FindPSprite(OverlayID());
					if (psp)
						psp.sprite = GetSpriteIndex("PZ22");
				}			
			}
			#### BC 1 bright;
			goto lightdone;
		Flash3:
			PZ31 A 1 bright {
				A_Light1();
				if (random(0,1) == 1) {
					let psp = Player.FindPSprite(OverlayID());
					if (psp)
						psp.sprite = GetSpriteIndex("PZ32");
				}			
			}
			#### BC 1 bright;
			goto lightdone;

	// ENHANCED
		Deselect.Enhanced:
			PLGG A 1 A_lower(12);
			loop;
		AltFire:
			TNT1 A 0 A_JumpIf(bdoom_weapons == BD_WeaponSet.WS_MODERN,"Altfire.Modern");
			PLGG A 6 A_StartSound("weapons/plasma/charge");
			PLGF AB 4 bright;
			PLGF C 5 bright {
				A_GunFlash("Flash3");
				A_RailAttack(25*random(10,25),0,1,"","0",RGF_NOPIERCING,2,"BD_PlasmaRailPuff",spawnclass:"BD_PlasmaRailBall");
			}
			TNT1 A 0 BD_SetSprite("PLGC","QLGC");
			#### BCD 1 DrawMuzzleSmoke((frandom[sfx](-48,-70),frandom[sfx](-15,50)), sAlpha: 0.3, sVSpeed: frandom[sfx](1.2,1.4), sScale: frandom[sfx](0.8,1.25), drawOver: true);
			#### A 0 A_StartSound("weapons/plasma/cool");
			#### EEEEEEEEEEEEEEE 1 DrawMuzzleSmoke((frandom[sfx](-82,-112),frandom[sfx](-30,50)), sAlpha: 0.3, sVSpeed: frandom[sfx](1.2,1.4), sScale: frandom[sfx](0.8,1.25), drawOver: true);
			#### DDCCBB 1 DrawMuzzleSmoke((frandom[sfx](-48,-70),frandom[sfx](-15,50)), sAlpha: 0.3, sVSpeed: frandom[sfx](1.2,1.4), sScale: frandom[sfx](0.8,1.25), drawOver: true);
			PLGC AA 1 DrawMuzzleSmoke((frandom[sfx](-24,-48),frandom[sfx](0,50)), sAlpha: 0.3, sVSpeed: frandom[sfx](1.2,1.4), sScale: frandom[sfx](0.8,1.25), drawOver: true);
			PLGG AAA 1 DrawMuzzleSmoke((frandom[sfx](-10,10),frandom[sfx](0,50)), sAlpha: 0.3, sVSpeed: frandom[sfx](1.2,1.4), sScale: frandom[sfx](0.8,1.25), drawOver: true);	
			goto ready;

	// MODERN
		Select.Modern:
			TNT1 A 0 A_StartSound("Mweapons/plasma/select");
			PLGS ABCDEF 1 A_WeaponReady(WRF_NOFIRE);
			goto ready;
		Deselect.Modern:
			PLGG A 1 A_lower(12);
			wait;
		Ready.Modern:
			PLGG A 1 {
				let p1 = Player.FindPSprite(PSP_GUN3);
				if (!p1) {
					A_Overlay(PSP_GUN3,"HeatBase",0);
					A_OverlayOffset(PSP_GUN3,0.0,0.0,WOF_INTERPOLATE);
				}
				let p2 = Player.FindPSprite(PSP_LIGHTS);
				let p3 = Player.FindPSprite(PSP_HLIGHTS);
				if (invoker.ammo1.amount > 0) {
					if (!p2) {
						A_Overlay(PSP_LIGHTS,"HeatBlue",0);
						A_OverlayOffset(PSP_LIGHTS,0.0,0.0,WOF_INTERPOLATE);
						A_OverlayFlags(PSP_LIGHTS,PSPF_RENDERSTYLE|PSPF_FORCEALPHA,true);
						A_OverlayRenderstyle(PSP_LIGHTS,STYLE_Add);
					}
					if (!p3) {
						A_Overlay(PSP_HLIGHTS,"HeatRed",0);
						A_OverlayOffset(PSP_HLIGHTS,0.0,0.0,WOF_INTERPOLATE);
						A_OverlayFlags(PSP_HLIGHTS,PSPF_RENDERSTYLE|PSPF_FORCEALPHA,true);
						A_OverlayRenderstyle(PSP_HLIGHTS,STYLE_Add);
						A_OverlayAlpha(PSP_HLIGHTS,invoker.heatcounter * 0.1);
					}
				}
				else if (p2 || p3)
					BD_ClearPSprite(PSP_LIGHTS,PSP_HLIGHTS);
				if (invoker.heatcounter > 0)
					A_WeaponReady(WRF_ALLOWRELOAD);
				else
					A_WeaponReady(WRF_NOSECONDARY);
			}
			goto ready;
		HeatBase: //the background of the heat screen
			PLHE Z 1;
			loop;
		HeatBlue:
			PLH1 ABCDEFGHIJ 3 bright {
				int heat = Clamp(invoker.heatcounter / 3,1,3);
				A_SetTics(4 - heat);
				double alph = Clamp(invoker.heatcounter * 0.1,0,1.0);
				A_OverlayAlpha(OverlayID(),1 - alph);
				A_OverlayAlpha(PSP_HLIGHTS,alph);
			}
			loop;
		HeatRed:
			PLH2 A 1 bright {
				let ps1 = player.FindPSprite(OverlayID());
				let psp = player.FindPSprite(PSP_LIGHTS);
				if (ps1 && psp)
					ps1.frame = psp.frame;
			}
			loop;
		Reload:
		AltFire.Modern:
			TNT1 A 0 {
				A_ClearRefire();
				if (invoker.heatcounter > 10)
					invoker.heatcounter = 10;
				A_Overlay(PSP_GUN2,"SteamFast",0);
				A_OverlayRenderstyle(PSP_GUN2,STYLE_Add);
				A_OverlayFlags(PSP_GUN2,PSPF_ALPHA|PSPF_FORCEALPHA,true);
				A_OverlayAlpha(PSP_GUN2,0.5);
				A_StartSound("Mweapons/plasma/steamfast");
			}
			PLGG A 2 {
				A_WeaponReady(WRF_NOFIRE);
				if (invoker.heatcounter > 0)
					invoker.heatcounter -= 1.0; 
				else
					return ResolveState("Ready");
				return ResolveState(null);
			}
			wait;
		SteamFast:
			PSTM ABCDEFGHIJKLMNOPQRSTUVWX 1 bright;
			stop;
		SteamSlow:
			PSTM ABCDEFGHIJKLMNOPQRSTUVWX 2 bright;
			stop;
		ForcedCool:
			PLGG A 8 {
				A_WeaponOffset(0,32,WOF_INTERPOLATE);
				A_StartSound("Mweapons/plasma/alarm");
				A_ClearRefire();
				A_OverlayOffset(PSP_GUN3,0,0,WOF_INTERPOLATE);
				A_OverlayOffset(PSP_LIGHTS,0,0,WOF_INTERPOLATE);
				A_OverlayOffset(PSP_HLIGHTS,0,0,WOF_INTERPOLATE);
			}
			TNT1 A 0 {
				if (invoker.heatcounter > 10)
					invoker.heatcounter = 10;
				A_Overlay(PSP_GUN2,"SteamSlow",0);
				A_OverlayRenderstyle(PSP_GUN2,STYLE_Add);
				A_OverlayFlags(PSP_GUN2,PSPF_ALPHA|PSPF_FORCEALPHA,true);
				A_OverlayAlpha(PSP_GUN2,0.5);
				A_StartSound("Mweapons/plasma/steamslow");
			}
			PLGG A 5 { 
				A_WeaponReady(WRF_NOFIRE);
				if (invoker.heatcounter > 0)
					invoker.heatcounter -= 1.0; 
				else
					return ResolveState("Ready");
				return ResolveState(null);
			}
			wait;
		fire.Modern:
			TNT1 A 0 A_JumpIf(invoker.heatcounter >= 12, "ForcedCool");
			PLGF A 1 { 
				A_WeaponOffset(0,32,WOF_INTERPOLATE);
				invoker.HeatCounter+=0.5;
				A_FireProjectile("BD_ModernPlasmaBall",frandom(-1.8,1.8),1,0,0,0,frandom(-1.5,1.5));
				A_ZoomFactor(0.997,ZOOM_NOSCALETURNING);
				A_OverlayOffset(PSP_GUN3,0,1);
				A_OverlayOffset(PSP_LIGHTS,0,1);
				A_OverlayOffset(PSP_HLIGHTS,0,1);
				A_GunFlash("Flash.Modern");
			}
			PLGF B 1 {
				A_ZoomFactor(0.998,ZOOM_NOSCALETURNING);
				A_OverlayOffset(PSP_GUN3,0.0,3);
				A_OverlayOffset(PSP_LIGHTS,0.0,3);
				A_OverlayOffset(PSP_HLIGHTS,0.0,3);
			}
			PLGF B 1 {
				A_ZoomFactor(0.999,ZOOM_NOSCALETURNING);
				A_WeaponOffset(frandom(-0.3,0.3),frandom(0,0.5),WOF_ADD);
				A_OverlayOffset(PSP_GUN3,0.0,3);
				A_OverlayOffset(PSP_LIGHTS,0.0,3);
				A_OverlayOffset(PSP_HLIGHTS,0.0,3);
			}
			PLGF A 1 {
				A_WeaponOffset(frandom(-0.5,0.5),frandom(0,1),WOF_ADD);
				A_ZoomFactor(1,ZOOM_NOSCALETURNING);
				A_OverlayOffset(PSP_GUN3,0,1);
				A_OverlayOffset(PSP_LIGHTS,0,1);
				A_OverlayOffset(PSP_HLIGHTS,0,1);
			}
			TNT1 A 0 A_ReFire;
			PLGG AAA 1 {
				A_OverlayOffset(PSP_GUN3,0.0,0.0);
				A_OverlayOffset(PSP_LIGHTS,0.0,0.0);
				A_OverlayOffset(PSP_HLIGHTS,0.0,0.0);
				if (bdoom_debris)
					DrawMuzzleSmoke((0,50), sAlpha: 0.4, sVSpeed: 1.2, sScale: 0.65, drawOver: true);
					//A_SpawnItemEx("BD_WeaponSmoke",cos(pitch)*25,random(-2,2),sin(-pitch)*25+random(33,36),		0,0,1,0);
			}
			goto ready;
		Flash.Modern:
			YLZ1 A 1 bright {
				A_light1();
				let po = player.FindPSprite(PSP_FLash);
				po.frame = random (0,5);
			}
			YLZ2 A 1 bright {
				A_light1();
				let po = player.FindPSprite(PSP_FLash);
				po.frame = random (0,5);
			}
			YLZ3 A 1 bright {
				A_light1();
				let po = player.FindPSprite(PSP_FLash);
				po.frame = random (0,5);
			}
			goto lightdone;
	}
}

Class BD_Plasmaball : Plasmaball {
	name pcolor;
	property pcolor : pcolor;
	mixin BD_MovingSectorCheck;
	Default {
		BD_Plasmaball.pcolor 'blue';
		damagetype "PlasmaDamage";
		+FORCEXYBILLBOARD
		+THRUGHOST
		+NOEXTREMEDEATH
		+BLOODLESSIMPACT
		+BRIGHT
		decal "BluePlasmaSplat";
		renderstyle "Add";
		scale 0.045;
		alpha 1.0;
		SeeSound "none";
		DeathSound "weapons/plasmax";
		stencilcolor "1d7dff"; //used to colorize particles spawned on death
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		if (bdoom_debris){
			let flare = BD_ProjFlare(Spawn("BD_ProjFlare",pos));
			if (flare) {
				flare.fcolor = pcolor;
				flare.scale = (0.1,0.1);
				flare.alpha = 0.4;
				flare.master = self;
			}
		}
		if (bdoom_projectiles < 2) {
			A_SetScale(1);
			alpha = 1;
		}
		else 
			A_SetScale(scale.x*randompick(-1,1),scale.y*randompick(-1,1));
		sound snd;
		if(bdoom_weapons == BD_WeaponSet.WS_VANILLA)
			snd = "weapons/plasmaf";
		else if(bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
			snd = "weapons/plasma/fire";
		//this is only used by Arachnotron, since the player uses a different plasmaball when using Modern guns
		else
			snd = "Mweapons/plasma/fire";
		A_StartSound(snd,slot:CHAN_5,flags:CHANF_DEFAULT,1.0);
	}
	override void Tick () {
		Vector3 oldPos = self.pos;    
		Super.Tick();
		if (!bdoom_debris || (bdoom_weapons < BD_WeaponSet.WS_MODERN && bdoom_projectiles < 2) || isFrozen())
			return;
		CheckMovingSetor();
		Vector3 path = level.vec3Diff( self.pos, oldPos );
		double distance = path.length() / 3; //this determines how far apart the particles are
		Vector3 direction = path / distance;
		int steps = int( distance );
		
		for( int i = 0; i < steps; i++ )  {
			let f = BD_PlasmaTrail(Spawn("BD_PlasmaTrail", oldPos ));
			f.fcolor = pcolor;
			oldPos = level.vec3Offset( oldPos, direction );
		}
	}
	States	{
	Spawn:
		TNT1 A 0 NoDelay A_JumpIf(bdoom_projectiles < 2, "Spawn.Classic");
		COIL ABCDEFGHIJKLMNO 1;
		loop;
	Spawn.Classic:
		EPLB ABCD 2;
		loop;
	Death:
		TNT1 A 0 {
			A_RemoveChildren(1,RMVF_EVERYTHING);
			if (bdoom_projectiles < 2)
				return ResolveState("Death.Classic");
			if (bdoom_debris) {
				for (int i = random[bdsfx](6,9); i > 0; i --) {
					if (!inMovingSector)
						A_spawnItemEx("BD_BluePlasmaPiece",frandom(-3,3),frandom(-3,3),frandom(1,4),frandom(-3,3),frandom(-3,3),frandom(3,6),flags:SXF_TRANSFERTRANSLATION);
					else {
						double vx = frandom[bdsfx](1,4);
						A_SpawnParticle(
							fillcolor,
							flags: SPF_RELATIVE|SPF_FULLBRIGHT,
							lifetime: 30,
							size: 2.5,
							angle: random[bdsfx](0,359),
							velx: vx,
							velz: frandom[bdsfx](2,6),
							accelx: -vx * 0.05,
							accelz: -0.5,
							sizestep: 0.08
						);
					}
				}
			}
			return ResolveState(null);
		}
		TNT1 A 0 A_SetScale(0.2*randompick(-1,1),0.2*randompick(-1,1));
		PEXP ABCDEFGHIJKLM 2 A_FadeOut(0.05);
		stop;
	Death.Classic:
		EPLC ABCDE 1;
		EPLC FGHIJKLMN 2;
		stop;
	}
}

//appears behind the plasmaball as a fading out trail
Class BD_PlasmaTrail : BD_BaseFlare {
	Default {
		alpha 0.5;
		scale 0.07;
	}
	override void Tick() {
		super.Tick();
		if (isFrozen())
			return;
		A_FadeOut(0.15);
		scale*=0.9;
	}
}

//a tiny bright blue "spark"
Class BD_BluePlasmaPiece : BD_RicochetSpark {
	Default {
		scale 0.08;
	}
	states {
	Spawn:
		PLBS A 1 bright A_FadeOut(0.05);
		loop;
	}
}

// not used by Plasma Rifle but referenced and used by BFG
Class BD_BluePlasmaShred : BD_BaseDebris {
	Default {
		+NOINTERACTION
		renderstyle "Add";
		speed 5;
		scale 0.05;
		alpha 0.6;
	}
	states {
		Spawn:
			PLSE ABCDE 1 bright A_SpawnItemEx("BD_BluePlasmaShredTrail",flags:SXF_TRANSFERTRANSLATION);
			stop;
	}
}

Class BD_BluePlasmaShredTrail : BD_BluePlasmaShred {
	Default {
		speed 0;
		alpha 0.5;
	}
	states {
		Spawn:
			PLSE ABCDE 2 bright;
			stop;
	}
}


// used as a particle of the railgun
Class BD_PlasmaRailBall : BD_BaseFlare {
	Default {
		alpha 0.8;
		scale 0.02;
	}
	override void PostBeginPlay() {
		super.PostBeginPlay();
		If(bdoom_debris)
			A_SpawnItemEx("BD_PlamaRailFlare",flags:SXF_SETMASTER);
	}
	states {
		Spawn:
			PEXP ABCDEF 1 A_FadeOut(0.0025);
			PEXP GHIJKLM 2 A_FadeOut(0.0025);
			stop;
	}
}

//flare around railgun particles
Class BD_PlamaRailFlare : BD_BaseFlare {
	Default {
		alpha 0.3;
		scale 0.07;
	}
	states {
		Spawn:
			LENB A 1 A_FadeOut(0.005);
			wait;
	}
}

Class BD_PlasmaRailPuff : Actor {
	Default {
		+NODECAL
		+BLOODLESSIMPACT
		+NOGRAVITY 
		+NOINTERACTION
		+NOEXTREMEDEATH
		+ALWAYSPUFF
		damagetype "PlasmaDamage";
		renderstyle "Add";
		alpha 0.8;
		scale 0.2;
	}
	states	{
		Spawn:
			TNT1 A 0 NoDelay {
				if (bdoom_debris) {
					for (int i = random(20,24); i > 0; i--)
						A_SpawnItemEx("BD_BlackSmoke",frandom(-2,2),frandom(-2,2),frandom(0,6),frandom(-0.5,0.5),frandom(-0.5,0.5),frandom(-0.5,0.5));
				}
			}
			PEXP ABCDEFGHIJKLM 1 bright;
			stop;
	}
}



Class BD_ModernPlasmaBall : BD_Plasmaball {
	Default {
		BD_Plasmaball.pcolor "green";
		Radius 8;
		Height 8;
		Speed 50;
		Damage 0;
		+NODECAL
		decal "none";
		+DONTTHRUST
		+FORCERADIUSDMG
		scale 0.03;
		alpha 1.0;
		SeeSound "";
		DeathSound "weapons/plasmax";
		stencilcolor "2dff1d";
	}
	override void PostBeginPlay() {
		Plasmaball.PostBeginPlay();
		A_StartSound("Mweapons/plasma/fire",slot:CHAN_6,flags:CHANF_DEFAULT,0.7);
		A_StartSound("Mweapons/plasma/loop",slot:CHAN_5,flags:CHANF_DEFAULT|CHANF_LOOPING,0.6,attenuation:3);
	}
	States {
		Spawn:
			COIS ABCDEFGHIJKLMNO 1 bright;
			loop;
		Death:
			TNT1 A 0 {
				A_SprayDecal("ArachnotronPlasmaSplat",radius+8);
				A_StopSound(5);
				if (pcolor == "green")
					A_SetTranslation("GreenPlasma");
				A_RemoveChildren(1,RMVF_EVERYTHING);
				A_Explode(30,40,0,0,40,0,0,"none");
				A_SetScale(0.14*randompick(-1,1),0.14*randompick(-1,1));
				if (bdoom_debris) {
					for (int i = random[bdsfx](5,7); i >  0; i--) {
						if (!inMovingSector)
							A_SpawnItemEx("BD_ModernPlasmaPiece",frandom(-3,3),frandom(-3,3),frandom(1,4),frandom(-3,3),frandom(-3,3),frandom(3,8));
						else {
							double vx = frandom[bdsfx](0,3);
							A_SpawnParticle(
								fillcolor,
								flags: SPF_RELATIVE|SPF_FULLBRIGHT,
								lifetime: 30,
								size: 2.5,
								angle: random[bdsfx](0,359),
								velx: vx,
								velz: frandom[bdsfx](1,5),
								accelx: -vx * 0.05,
								accelz: -0.5,
								sizestep: 0.08
							);	
						}
					}
				}
			}
			PEXP CDEFGH 1 bright {
				A_CustomRailGun(0,0,"","BBFFBB",RGF_SILENT|RGF_NOPIERCING|RGF_CENTERZ|RGF_FULLBRIGHT,maxdiff:15,pufftype:"BD_NullPuff",random(0,360),random(0,360),range:32,duration:16,sparsity:0.2,driftspeed:0.1);
				A_CustomRailGun(0,0,"","BBFFBB",RGF_SILENT|RGF_NOPIERCING|RGF_CENTERZ|RGF_FULLBRIGHT,maxdiff:15,pufftype:"BD_NullPuff",random(0,360),random(0,360),range:32,duration:16,sparsity:0.2,driftspeed:0.1);
			}
			PEXP IJKLM 1 bright;
			stop;
	}
}


Class BD_ModernPlasmaPiece : BD_SmallDebris {
	Default {
		renderstyle "Add";
		alpha 1.0;
		scale 0.023;
		gravity 0.5;
		BD_SmallDebris.dbrake 0.7;
	}
	states {
		Spawn:
			SPRK B 1 bright NoDelay A_FadeOut(0.03);
			loop;
	}
}

Class BD_ModernFlarePlasmaTrail : BD_BaseFlare {
	Default {
		+FORCEXYBILLBOARD
		alpha 0.5;
		scale 0.04;
	}
	states	{
		Spawn:
			TNT1 A 2 nodelay;
			LENG A 1 bright  {
				A_FadeOut(0.2);
				scale*=0.9;
			}
			wait;
	}
}


//unused:
Class BD_MPlasmaBallRay : BD_BaseFlare {
	Default {
		alpha 0.5;
		scale 0.015;
		translation "GreenPlasma";
	}
	states {
		Spawn:
			PEXP ABCDEFGHIJKLM 1 bright A_FadeOut(0.02);
			stop;
	}
}

Class BD_MPlasmaBallRayFlare : BD_BaseFlare {
	Default {
		renderstyle "Add";
		alpha 0.07;
		scale 0.04;
	}
	states
		{
		Spawn:
			LENG A 1 bright A_FadeOut(0.005);
			wait;
	}
}
