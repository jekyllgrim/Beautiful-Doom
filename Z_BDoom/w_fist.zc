//******
// FIST
//******

Class BD_Fist : BDoomWeapon {
	bool speedup;
	protected double dmgmul;
	protected double wzoom;
	int fcombo; // total # of light hits; reset by Light Finisher, Uppercut and Kick
	int lcombo; // # of light hits IN A ROW (at 5th goes to Light Finisher); reset by any finisher
	int tcombo; // total length of combo (total # of all hits that connected with an enemy). Increased by puffs (can't be increased by swinging at air, in contrast to others)
	int hurtchance; // % chance of FORCEPAINing the enemy with light punches (increased with tcombo, clamped at 15-85%)
	bool bpunch; //(with Berserk) used left punch?
	int targetdistance;
	property BerserkMultiplier : dmgmul;
	property zoom : wzoom;
	Default {
		BD_Fist.BerserkMultiplier 1;
		BD_Fist.zoom 1;
		weapon.selectionorder 370;
		+WEAPON.NOALERT
		weapon.slotnumber 1;
		weapon.slotpriority 0;
		Weapon.Kickback 100;
		Obituary "$OB_MPFIST";
		Tag "$TAG_FIST";
		+WEAPON.WIMPY_WEAPON
		+WEAPON.MELEEWEAPON
		BDoomWeapon.ClassicIcon "FIS0D0";
		BDoomWeapon.ModernIcon "NUKWJ0";
	}
	override void DoEffect() {
		Super.DoEffect();
		If (!Owner || !owner.player)
			return;
		if(bdoom_weapons == BD_WeaponSet.WS_MODERN) {
			//console.printf("hurt chance: %d",hurtchance);
			//Console.Printf("dmg mul: %f",dmgmul);
			bNOAUTOFIRE = true;
			bWIMPY_WEAPON = false;
		}
		else {
			bNOAUTOFIRE = false;
			bWIMPY_WEAPON = true;
		}
		//Console.Printf("tcombo %d",tcombo);
		if (bdoom_weapons != 2 || owner.player.readyweapon != self) {
			fcombo = 0;
			lcombo = 0;
			tcombo = 0;
			hurtchance = 0;
		}
	}

	states {
		Select:
			TNT1 A 0 {
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState ("Select.Modern");
				else if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					return ResolveState ("Select.Enhanced");				
				A_WeaponOffset(35,60,WOF_INTERPOLATE);
				BD_SetSprite("FIS0","1IS0");
				return ResolveState (null);
			}
			#### AAAAAA 1 {
				A_WeaponOffset(-5,-4,WOF_ADD);
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
			goto ready;
		Deselect:
			TNT1 A 0 {
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3);
				speed = default.speed;	
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState ("Deselect.Modern");
				if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					return ResolveState ("Deselect.Enhanced");
				BD_SetSprite("FIS0","1IS0");
				return ResolveState (null);
			}
			#### A 1 A_Lower;
			wait;
		Ready:
			TNT1 A 0 {
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState ("Ready.Modern");
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3);
				speed = default.speed;	
				if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					return ResolveState ("Ready.Enhanced");
				BD_SetSprite("FIS0","1IS0");
				return ResolveState (null);
			}
			#### A 1 A_WeaponReady(WRF_NOSECONDARY);
			loop;
		Fire: //pre-fire 4 tics, fire 13 tics, refire 5 tics
			FIS0 A 1 {
				if (bdoom_weapons == BD_WeaponSet.WS_MODERN)
					return ResolveState ("Fire.Modern");
				else if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
					return ResolveState ("Fire.Enhanced");
				A_AlertMonsters();
				if (FindInventory("PowerStrength"))
					return ResolveState ("FireStrong");
				BD_SetSprite("FIS0","1IS0");
				return ResolveState (null);
			}
			TNT1 A 0 BD_SetSprite("FI10","1I10");
			#### BCD 1;
			TNT1 A 0 BD_SetSprite("FIS0","1IS0");
			#### E 3 A_CustomPunch(2*random(1,10), TRUE,0, "BD_FistPuff_Vanilla");
			#### FGHIJ 2;
			#### A 0 A_Refire;
		FireEnd:
			#### A 0 A_Weaponoffset(40,64);
			#### AAAA 1 {
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
				A_WeaponOffset(-10,-8,WOF_ADD);
			}
			goto ready;
		Hold:
			TNT1 A 1 A_jumpifinventory("PowerStrength",1,"HoldStrong");
			TNT1 A 0 BD_SetSprite("FIS0","1IS0");
			#### BCD 1;
			#### E 3 A_CustomPunch(2*random(1,10), TRUE,0, "BD_FistPuff_Vanilla");
			#### FGHIJ 2;
			#### A 0 A_Refire;
			goto FireEnd;
		FireStrong:
			TNT1 A 1 BD_SetSprite("FIS0","1IS0");
			TNT1 A 0 BD_SetSprite("FI10","1I10");
			#### BCD 1;
			TNT1 A 0 BD_SetSprite("FIS0","1IS0");
			#### E 3 A_CustomPunch(20*random(1,10), TRUE,0, "BD_FistPuffStrong");
			#### EEEE 1 A_WeaponOffset(frandom(-1.3,1.3),frandom(0,1.5),WOF_ADD);
			#### A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			#### FGHIJJ 1;
			#### A 0 A_Refire("HoldStrong");
			goto FireEnd;
		HoldStrong:
			TNT1 A 1;
			TNT1 A 0 BD_SetSprite("FIS0","1IS0");
			#### BCD 1;
			#### E 3 A_CustomPunch(20*random(1,10), TRUE,0, "BD_FistPuffStrong");
			#### EEEE 1 A_WeaponOffset(frandom(-1.3,1.3),frandom(0,1.5),WOF_ADD);
			#### A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			#### FGHIJJ 1;
			#### A 0 A_Refire("HoldStrong");
			goto FireEnd;

		Select.Enhanced:
			TNT0 A 0 {
				A_Weaponoffset(-40,64);
				BD_SetSprite("FIST","1IST");
			}
			#### AAAA 1 {
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
				A_WeaponOffset(10,-8,WOF_ADD);
			}
			goto ready;
		Deselect.Enhanced:
			TNT1 A 0 BD_SetSprite("FIST","1IST");
			#### A 1 A_Lower(12);
			wait;
		Ready.Enhanced:
			FIST A 1 {
				A_WeaponReady();
				BD_SetSprite("FIST","1IST");
			}
			goto ready;
		Fire.Enhanced:
			FIST A 1 {			
				if (FindInventory("PowerStrength"))
					return ResolveState ("FireStrong.Enhanced");
				BD_SetSprite("FIST","1IST");
				return ResolveState (null);
			}
			TNT1 A 0 {
				A_StartSound("Mweapons/fist/swing");
				BD_SetSprite("FIS1","1IS1");
			}
			#### BCD 1;
			TNT1 A 0 BD_SetSprite("FIST","1IST");
			#### E 1 A_CustomPunch(2*random(1,10), TRUE,0, "BD_FistPuff");
			#### FGHIJ 2;
			#### A 0 A_Refire("Hold.Enhanced");
		FireEnd.Enhanced:
			#### A 0 A_Weaponoffset(-40,64);
			#### AAAA 1 {
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
				A_WeaponOffset(10,-8,WOF_ADD);
			}
			goto ready.Enhanced;
		Hold.Enhanced:
			TNT1 A 1 {			
				if (FindInventory("PowerStrength"))
					return ResolveState ("HoldStrong.Enhanced");
				return ResolveState (null);
			}
			TNT1 A 0 {
				BD_SetSprite("FIST","1IST");
				A_StartSound("Mweapons/fist/swing");
			}
			#### BCD 1;
			#### E 1 A_CustomPunch(2*random(1,10), TRUE,0, "BD_FistPuff");
			#### FGHIJ 2;
			#### A 0 A_Refire("Hold.Enhanced");
			goto FireEnd.Enhanced;
		FireStrong.Enhanced:
			FIST A 1 BD_SetSprite("FIST","1IST");
			TNT1 A 0 {
				A_StartSound("Mweapons/fist/heavyswing");
				BD_SetSprite("FIS1","1IS1");
			}
			#### BCD 1;
			TNT1 A 0 BD_SetSprite("FIST","1IST");
			#### E 1 A_CustomPunch(20*random(1,10), TRUE,0, "BD_FistPuffStrong");
			#### EEEE 1 A_WeaponOffset(frandom(-1.3,1.3),frandom(0,1.5),WOF_ADD);
			#### A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			#### FGHIJJ 1;
			#### A 0 A_Refire("HoldStrong.Enhanced");
			goto FireEnd.Enhanced;
		HoldStrong.Enhanced:
			TNT1 A 1;
			#### A 0 {
				A_StartSound("Mweapons/fist/heavyswing");
				BD_SetSprite("FIST","1IST");
			}
			#### BCD 1;
			#### E 1 A_CustomPunch(20*random(1,10), TRUE,0, "BD_FistPuffStrong");
			#### EEEE 1 A_WeaponOffset(frandom(-1.3,1.3),frandom(0,1.5),WOF_ADD);
			#### A 0 A_WeaponOffset(0,32,WOF_INTERPOLATE);
			#### FGHIJJ 1;
			#### A 0 A_Refire("HoldStrong.Enhanced");
			goto FireEnd.Enhanced;
		AltFire:
			TNT1 A 0 A_JumpIf(bdoom_weapons == BD_WeaponSet.WS_MODERN, "AltFire.Modern");
			TNT1 A 0 BD_SetSprite("KICF","1ICF");
			#### AB 1;
		AltHold:
			TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_PLAYERTRANSLATED,true);
			TNT1 A 0 A_jumpifinventory("PowerStrength",1,"AltHoldStrong");
			KICK AB 1;
			TNT1 A 0 {
				invoker.preKickSpeed = speed;
				if (player.OnGround)
					speed = default.speed*0.2;
				A_StartSound("weapons/kick/swing");
			}
			KICK CD 1;
			TNT1 A 0 A_Recoil(-2);
			KICK EF 1;
			KICK G 3 A_CustomPunch(3*random(5,12),TRUE,CPF_NOTURN,"BD_KickPuff",72);
			KICK HD 2;
			KICK CBA 3;
			TNT1 A 2 { 
				speed = invoker.preKickSpeed; 
				A_OverlayFlags(OverlayID(),PSPF_PLAYERTRANSLATED,false);
			}
			TNT1 A 0 A_ReFire("AltHold");
			TNT1 A 0 BD_SetSprite("KICF","1ICF");
			#### BA 2;
			goto ready;
		AltHoldStrong:
			KICK AB 1;
			TNT1 A 0 { 
				speed = default.speed *0.5;
				A_StartSound("weapons/kick/swing");
				A_OverlayFlags(OverlayID(),PSPF_PLAYERTRANSLATED,true);
			}
			KICK CD 1;
			TNT1 A 0 A_Recoil(-5);
			KICK EF 1;
			KICK G 3 A_CustomPunch(30*random(3,10),TRUE,CPF_NOTURN,"BD_KickPuffStrong",80);
			KICK HD 2;
			TNT1 A 0 { speed = default.speed; }
			KICK CBA 3;
			TNT1 A 0 A_OverlayFlags(OverlayID(),PSPF_PLAYERTRANSLATED,false);
			TNT1 A 0 A_ReFire("AltHoldStrong");
			TNT1 A 0 BD_SetSprite("KICF","1ICF");
			#### BA 2;
			goto ready;

	//modern
		Select.Modern:
			TNT1 A 0 {
				A_WeaponOffset(0,42);
				A_StartSound("mweapons/fist/wear");
				BD_SetSprite("NUKW","1UKW");
			}
			#### ABCD 1 {
				A_WeaponOffset(0,-1,WOF_ADD);
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
			#### EFG 2 {
				A_WeaponOffset(0,-1,WOF_ADD);
				A_WeaponReady(WRF_NOFIRE|WRF_NOBOB);
			}
			#### HIJ 2 {
				A_WeaponOffset(0,-1,WOF_ADD);
				A_WeaponReady(WRF_NOBOB);
			}
			goto ready;
		Deselect.Modern:
			TNT1 A 0 BD_SetSprite("NUKW","1UKW");
			#### J 1 A_Lower(12);
			wait;
		Ready.Modern:
			TNT1 A 0 {
				A_ClearRefire();
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3);
				A_Overlay(PSP_GUN2,"Ready.Right");
				A_OverlayFlags(PSP_GUN2,PSPF_ADDWEAPON,false);
				A_OverlayFlags(PSP_GUN2,PSPF_ADDBOB,false);
				A_OverlayOffset(PSP_GUN2,0,32);
				A_WeaponOffset(0,32,WOF_INTERPOLATE);				
			}
			#### AAAA 2 {
				if (bdoom_weapons != 2)
					return ResolveState("Ready");
				BD_SetSprite("NUKL","1UKL");
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_SetTics(4);
				A_WeaponReady(WRF_ALLOWUSER1|WRF_NOBOB);
				A_WeaponOffset(0.09,-0.25,WOF_ADD);
				A_OverlayOffset(PSP_GUN2,-0.09,-0.25,WOF_ADD);
				if (vel.length() > 3) {
					if (invoker.speedup) {
						A_SetTics(0);
						invoker.speedup = false;
					}
					else {
						A_SetTics(1);
						invoker.speedup = true;
					}
				}			
				if (FindInventory("BD_ModernBerserk_Regen")) {
					A_WeaponOffset(0.3*randompick(-1,1),0.3*randompick(-1,1),WOF_ADD);
					A_OverlayOffset(PSP_GUN2,0.3*randompick(-1,1),0.3*randompick(-1,1),WOF_ADD);
				}
				return ResolveState(null);
			}
			#### A 0 {
				invoker.fcombo = 0;	
				invoker.lcombo = 0;	
				invoker.tcombo = 0;
			}
			#### AAAAAAAAAAAA 2 {
				BD_SetSprite("NUKL","1UKL");
				A_WeaponReady(WRF_ALLOWUSER1|WRF_NOBOB);
				A_WeaponOffset(0.09,-0.25,WOF_ADD);
				A_OverlayOffset(PSP_GUN2,-0.09,-0.25,WOF_ADD);
				if (vel.length() > 3) {
					if (invoker.speedup) {
						A_SetTics(0);
						invoker.speedup = false;
					}
					else {
						A_SetTics(1);
						invoker.speedup = true;
					}
				}
				if (FindInventory("BD_ModernBerserk_Regen")) { //make hands jitter additionally if Berserk is active
					A_WeaponOffset(0.3*randompick(-1,1),0.3*randompick(-1,1),WOF_ADD);
					A_OverlayOffset(PSP_GUN2,0.3*randompick(-1,1),0.3*randompick(-1,1),WOF_ADD);
				}
			}
			#### AAAAAAAAAAAAAAAA 4 {
				BD_SetSprite("NUKL","1UKL");
				A_WeaponReady(WRF_ALLOWUSER1|WRF_NOBOB);
				A_WeaponOffset(-0.09,0.25,WOF_ADD);
				A_OverlayOffset(PSP_GUN2,0.09,0.25,WOF_ADD);
				if (vel.length() > 3) {
					if (invoker.speedup) {
						A_SetTics(0);
						invoker.speedup = false;
					}
					else {
						A_SetTics(1);
						invoker.speedup = true;
					}
				}
				if (FindInventory("BD_ModernBerserk_Regen")) {
					A_WeaponOffset(0.3*randompick(-1,1),0.3*randompick(-1,1),WOF_ADD);
					A_OverlayOffset(PSP_GUN2,0.3*randompick(-1,1),0.3*randompick(-1,1),WOF_ADD);
				}
			}
			#### A 0 {
				if (bdoom_weapons != 2)
					return ResolveState("Ready");
				return ResolveState(null);
			}
			goto ready.modern+1;
		Ready.Left:
			#### A 1 BD_SetSprite("NUKL","1UKL");
			loop;
		Ready.Right:
			#### A 1 BD_SetSprite("NUKR","1UKR");
			loop;
		Fire.Modern: //increases all counters
			TNT1 A 0 {
				A_ClearRefire();
				speed = default.speed;
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3);
				A_WeaponOffset(0,32,WOF_INTERPOLATE);
				invoker.fcombo++;
				invoker.lcombo++;
				invoker.hurtchance = clamp(invoker.tcombo * 8, 10,85);
				if (invoker.lcombo >= 5 && !FindInventory("BD_ModernBerserk_Regen"))
					return ResolveState("LightFinisher");
				A_Overlay(PSP_GUN2,"Ready.Right");
				A_OverlayOffset(PSP_GUN2,0,0,WOF_INTERPOLATE);
				A_StartSound("Mweapons/fist/swing",slot:CHAN_5);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(-2,0,5);
				else
					A_CameraSway(-1.6,0,5);
				BD_SetSprite("NUKL","1UKL");
				return ResolveState(null);
			}
			#### ABCD 1 A_OverlayOffset(PSP_GUN2,3.5,3.5,WOF_ADD);
			#### E 1 {
				A_OverlayOffset(PSP_GUN2,2.5,2.5,WOF_ADD);
				BD_ModernPunch(4*frandom(1.5,4.5), berserkdamage: 14*frandom(1.5,4.5), pufftype: "BD_ModernFistPuff", berserkpuff: "BD_ModernFistPuff_Berserk");
				A_WeaponOffset(frandom(-1.5,1.5),frandom(0,2),WOF_ADD);
			}
			#### A 0 {				
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_CameraSway(2,0,5);
				else
					A_CameraSway(1.6,0,8);
			}
			#### F 1 A_OverlayOffset(PSP_GUN2,-1.2,-1.2,WOF_ADD);
			#### G 1 {
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_WeaponReady(WRF_DISABLESWITCH|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,-1.2,-1.2,WOF_ADD);
			}
			#### HII 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,-1.2,-1.2,WOF_ADD);
			}
			#### JJJAAAAA 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && (player.cmd.buttons & BT_ATTACK) && (player.oldbuttons & BT_ATTACK))
					return ResolveState("Fire.Modern");
				A_WeaponReady(WRF_DISABLESWITCH|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,-1.2,-1.2,WOF_ADD);
				return ResolveState(null);
			}
			#### A 0 {
				return ResolveState(null);
				}
			goto ready;
		LightFinisher:
			TNT1 A 0 {
				A_Overlay(PSP_GUN2,"Ready.Right");
				A_OverlayOffset(PSP_GUN2,0,0,WOF_INTERPOLATE);
				A_StartSound("Mweapons/fist/heavyswing",slot:CHAN_5);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(-2.5,0,5);
				else
					A_CameraSway(-1.9,0,5);
				BD_SetSprite("NUKL","1UKL");
			}
			#### ABCD 1 {
				A_OverlayOffset(PSP_GUN2,3.5,3.5,WOF_ADD);
			}
			#### E 1 {
				invoker.lcombo = 0;
				A_OverlayOffset(PSP_GUN2,2.5,2.5,WOF_ADD);
				BD_ModernPunch(5*frandom(1.7,4.8), berserkdamage: 16*frandom(1.7,4.8), pufftype: "BD_ModernFistPuff", range: 68);	
				A_WeaponOffset(2,frandom(0,2),WOF_ADD);
			}
			#### A 0 {				
					A_CameraSway(1.9,0,8);
				}
			#### EE 1 {
				A_WeaponOffset(2,frandom(0,2),WOF_ADD);
				A_OverlayOffset(PSP_GUN2,-1.1,-1.1,WOF_ADD);
			}
			#### FFGGHH 1 A_OverlayOffset(PSP_GUN2,-1.1,-1.1,WOF_ADD);
			#### IIJJAAAA 1 {
				A_WeaponReady(WRF_NOBOB|WRF_NOPRIMARY|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,-1.2,-1.2,WOF_ADD);
			}
			goto ready.Modern;
		Altfire.Modern: //resets light punch sequence, keeps total # of light punches, increases total counter
			TNT1 A 0 {
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3);
				A_WeaponOffset(0,32,WOF_INTERPOLATE);
				speed = default.speed;
				invoker.bpunch = false;
				A_Overlay(PSP_GUN2,"Ready.Left");
				A_OverlayFlags(PSP_GUN2,PSPF_ADDWEAPON,false);
				A_OverlayOffset(PSP_GUN2,0,32,WOF_INTERPOLATE);
				BD_SetSprite("NUKR","1UKR");
				if (invoker.fcombo == 1 && invoker.lcombo > 0)
					return ResolveState("HeavyPunch1");
				if (invoker.fcombo == 2 && invoker.lcombo > 0)
					return ResolveState("HeavyPunch2");
				if (invoker.fcombo >= 3 && invoker.lcombo > 0)
					return ResolveState("Uppercut");
				invoker.tcombo = 0;
				return ResolveState(null);
			}
			//if fcombo is 0, perform basic heavy punch but with longer wind-up
			#### AAAABBBB 1 {
				A_WeaponOffset(1.2,1.2,WOF_ADD);
			}
		HeavyPunch1:
			#### A 0 {
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/ && (player.cmd.buttons & BT_ALTATTACK) && (player.oldbuttons & BT_ALTATTACK) && invoker.wzoom > 0.93) {
					invoker.dmgmul = Clamp(invoker.dmgmul+0.35,1,3.5);
					return ResolveState(null);
				}
				invoker.wzoom = 1;
				A_ZoomFactor(1,ZOOM_NOSCALETURNING);
				return ResolveState("HeavyPunch1Do");
			}
			#### BBB 1 {
				//A_OverlayOffset(PSP_GUN2,-0.3,0.1,WOF_ADD);
				A_WeaponOffset(0.22,0.22,WOF_ADD);
				invoker.wzoom = Clamp(invoker.wzoom * 0.997,0.9,1);
				A_ZoomFactor(invoker.wzoom,ZOOM_NOSCALETURNING);
			}
			loop;
		HeavyPunch1Do:
			#### A 0 {
				A_WeaponOffset(0,32);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/) {
					A_CameraSway(2.1,0,5);
					A_StartSound("Mweapons/fist/heavyswing",slot:CHAN_5);
				}
				else {
					A_CameraSway(1.7,0,4);
					A_StartSound("Mweapons/fist/swing",slot:CHAN_5);
				}
			}
			#### CDE 1 {
				A_Recoil(-0.35);
				A_OverlayOffset(PSP_GUN2,-5.5,6.3,WOF_ADD);
			}
			#### F 1 {
				invoker.lcombo = 0;
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_Recoil(-1.5 * invoker.dmgmul);
				else
					A_Recoil(-0.5);
				A_OverlayOffset(PSP_GUN2,-5.5,6.3,WOF_ADD);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/) {
					A_CustomPunch(10*frandom(4.5,5)*invoker.dmgmul, norandom:TRUE,0, pufftype:"BD_ModernFistPuffHeavy_Berserk", range:72);
					invoker.dmgmul = invoker.default.dmgmul;
				}
				else {
					A_CustomPunch(6*frandom(2.5,5), TRUE,0, pufftype: "BD_ModernFistPuff", range:72);
				}
				A_WeaponOffset(frandom(-2,2),frandom(0,2.5),WOF_ADD);
			}
			#### A 0 {				
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(-2.1,0,5);
				else
					A_CameraSway(-1.7,0,4);
			}
			#### G 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 3)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,2,-2.29,WOF_ADD);
			}
			#### H 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 2)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,2,-2.29,WOF_ADD);
			}
			#### IJK 1 {
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,2,-2.29,WOF_ADD);
			}
			#### LLMM 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,2,-2.29,WOF_ADD);
			}
			TNT1 AA 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,2,-2.29,WOF_ADD);
			}
			#### BA 1 A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			goto ready;
		HeavyPunch2:
			#### A 0 {
				A_StartSound("Mweapons/fist/heavyswing",slot:CHAN_5);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/) {
					A_CameraSway(2.7,0,5);
				}
				else {
					A_CameraSway(1.9,0,4);
				}
			}
			#### BCDE 1 {
				A_Recoil(-0.85);
				A_OverlayOffset(PSP_GUN2,-5.5,6.3,WOF_ADD);
			}
			#### F 2 {
				invoker.lcombo = 0;
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_Recoil(-2);
				else
					A_Recoil(-0.5);
				A_OverlayOffset(PSP_GUN2,-5.5,6.3,WOF_ADD);
				BD_ModernPunch(6.5*frandom(3,6), berserkdamage: 14*frandom(4.5,6.5), pufftype:"BD_ModernFistPuffHeavy", berserkpuff:"BD_ModernFistPuffHeavy_Berserk", range: 76);
				A_WeaponOffset(frandom(-2,2),frandom(0,2.5),WOF_ADD);
			}
			#### A 0 {			
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(-2.7,0,5);
				else
					A_CameraSway(-1.9,0,5);
			}
			#### G 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 3)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.83,-2.1,WOF_ADD);
			}
			#### H 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 2)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.83,-2.1,WOF_ADD);
			}
			#### IIJJ 1 {
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.83,-2.1,WOF_ADD);
			}
			#### KKLLMM 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.83,-2.1,WOF_ADD);
				//A_SetAngle(angle-0.28,SPF_INTERPOLATE);
			}
			#### AAA 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.83,-2.1,WOF_ADD);
			}
			#### BA 3 {
				A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			}
			goto ready;
		Uppercut:
			TNT1 A 0 {
				A_StartSound("Mweapons/fist/heavyswing",slot:CHAN_5);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(0,-4.2,4);
				else
					A_CameraSway(0,-3.2,4);
				BD_SetSprite("NUKU","1UKU");
			}
			#### ABC 1 {
				if (FindInventory("PowerStrength"))
					A_Recoil(-2.5);
				else
					A_Recoil(-1.5);
				A_OverlayOffset(PSP_GUN2,-5.5,6.3,WOF_ADD);
			}
			#### D 1 {
				invoker.lcombo = 0;
				invoker.fcombo = 0;
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_Recoil(-0.7);
				else
					A_Recoil(-0.35);
				A_OverlayOffset(PSP_GUN2,-5.5,6.3,WOF_ADD);
				BD_ModernPunch(8*frandom(3.4,6.5), berserkdamage: 20*frandom(4.5,6), pufftype:"BD_ModernFistPuffUppercut", berserkpuff:"BD_ModernFistPuffUppercut_Berserk", range: 80);
				A_WeaponOffset(frandom(-2,2),frandom(0,2.5),WOF_ADD);
			}
			#### A 0 {
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(0,4.2,4);
				else
					A_CameraSway(0,3.2,4);
			}
			#### D 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 3)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_WeaponOffset(frandom(-1,1),frandom(0,2),WOF_ADD);
				A_OverlayOffset(PSP_GUN2,1.22,-1.4,WOF_ADD);
			}
			#### D 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 2)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_WeaponOffset(frandom(-1,1),frandom(0,2),WOF_ADD);
				A_OverlayOffset(PSP_GUN2,1.22,-1.4,WOF_ADD);
			}
			#### DD 1 {
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_WeaponOffset(frandom(-1,1),frandom(0,2),WOF_ADD);
				A_OverlayOffset(PSP_GUN2,1.22,-1.4,WOF_ADD);
			}
			#### EE 1 {
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.22,-1.4,WOF_ADD);
			}
			#### FFGGHHIIJJKK 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
				A_OverlayOffset(PSP_GUN2,1.22,-1.4,WOF_ADD);
			}
			TNT1 A 3 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			}
			TNT1 A 0 BD_SetSprite("NUKR","1UKR");
			#### BA 3 {
				A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB|WRF_ALLOWUSER1);
			}
			goto ready;
		User1: //kick | resets sequential and total light punch coutners, decreases total counter by 1 (if it's > 0)
			TNT1 A 0 {
				A_WeaponOffset(0,32);
				BD_ClearPSprite(PSP_GUN2,PSP_GUN3);
				A_Overlay(PSP_GUN2,"Ready.Left");
				A_Overlay(PSP_GUN3,"Ready.Right");
				A_OverlayFlags(OverlayID(),PSPF_PLAYERTRANSLATED,true);
			}
			TNT1 A 0 A_Jumpif((invoker.tcombo > 0 || FindInventory("BD_ModernBerserk_Regen")), 3);
			TNT1 AA 1 {
				A_OverlayOffset(PSP_GUN2,-3,3,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,3,3,WOF_ADD);
			}
			TNT1 A 0 A_Jumpif(invoker.tcombo > 1, 4);
			KICK AB 1 {
				A_OverlayOffset(PSP_GUN2,-3,3,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,3,3,WOF_ADD);
			}
			TNT1 A 0 { 
				speed = default.speed*0.1;
				if(invoker.tcombo > 1)
					A_StartSound("Mweapons/fist/heavyswing",slot:CHAN_5);
				else
					A_StartSound("Mweapons/fist/swing",slot:CHAN_5);
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(0,4.2,4);
				else
					A_CameraSway(0,3,4);
			}
			KICK CD 1 {
				A_OverlayOffset(PSP_GUN2,-3,3,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,3,3,WOF_ADD);
			}
			KICK EF 1 {
				A_OverlayOffset(PSP_GUN2,-3,3,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,3,3,WOF_ADD);
				if (FindInventory("BD_ModernBerserk_Regen")) {
					A_Recoil(clamp (invoker.tcombo, 1, 6) * -3);
					if (pos.z == floorz)
						vel.z += 5;
				}
				else
					A_Recoil(clamp (invoker.tcombo, 1, 4) * -1.3);
			}
			KICK G 3 {
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_Recoil(clamp (invoker.tcombo, 1, 6) * -2.5);
				else
					A_Recoil(clamp (invoker.tcombo, 1, 6) * -1.3);
				BD_ModernPunch(10*frandom(3,5.5), berserkdamage: 20*frandom(4.5,6), pufftype:"BD_ModernKickPuff", berserkpuff:"BD_ModernKickPuff_Berserk", range: 85);
				invoker.lcombo = 0;
				invoker.fcombo = 0;
				if (invoker.tcombo > 0)
					invoker.tcombo--;
			}
			TNT1 A 0 {
				if (FindInventory("PowerStrength") /*FindInventory("BD_ModernBerserk_Regen")*/)
					A_CameraSway(0,-4.2,4);
				else
					A_CameraSway(0,-3,4);
			}
			KICK HH 1 {
				if (FindInventory("BD_ModernBerserk_Regen") && invoker.tcombo > 2)
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB);
				A_OverlayOffset(PSP_GUN2,2,-2,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,-2,-2,WOF_ADD);
			}
			KICK DDCC 1 {
				if (FindInventory("BD_ModernBerserk_Regen"))
					A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB);
				A_OverlayOffset(PSP_GUN2,2,-2,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,-2,-2,WOF_ADD);
			}
			KICK BBBAAA 1 {
				A_WeaponReady(WRF_DISABLESWITCH|WRF_NOSECONDARY|WRF_NOBOB);
				A_OverlayOffset(PSP_GUN2,2,-2,WOF_ADD);
				A_OverlayOffset(PSP_GUN3,-2,-2,WOF_ADD);
			}
			TNT1 A 2 {
				speed = default.speed;
				A_WeaponReady(WRF_NOSECONDARY|WRF_NOBOB);
			}
			goto ready;
	}
}

//// MODERN PUFFS

//spawned by light attacks and used as a base puff class
Class BD_ModernFistPuff : BdoomPuff {
	Default {
		+PUFFGETSOWNER
		+PUFFONACTORS
		+NOEXTREMEDEATH
		attacksound "Mweapons/fist/punch";
		seesound "Mweapons/fist/punch";
		mass 1;
	}
	states {
	Crash:
		TNT1 A 1 {
			if (target && target.player && target.player.readyweapon) {
				let weap = BDoomWeapon(target.player.readyweapon);
				if (weap)
					weap.BD_SetPitch(target.pitch+frandom(-1,1),SPF_INTERPOLATE);
			}
		}
		stop;
	melee:
		TNT1 A 1 {
			if(target && target.player && target.player.readyweapon) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist) {
					bdfist.BD_SetPitch(target.pitch+frandom(-1,1),SPF_INTERPOLATE);
					bdfist.tcombo++;
					if (bdfist.hurtchance > random(0,100) || FindInventory("BD_ModernBerserk_Regen")) {
						bFORCEPAIN = true;
					}
				}
			}
		}
		stop;
	}		
}

// Basic puff version for Berserk, more intense
Class BD_ModernFistPuff_Berserk : BD_ModernFistPuff {
	Default {
		-NOEXTREMEDEATH
		//+FORCEPAIN
		+EXTREMEDEATH
		decal "FistScorch";
		attacksound "Mweapons/fist/heavypunch";
		seesound "Mweapons/fist/heavyflesh";
	}
	override void BeginPlay() {
		super.BeginPlay();
		if (!target || !target.FindInventory("BD_ModernBerserk_Regen"))
			return;
		bFORCEPAIN = true;
	}
	states {
	Crash:
		TNT1 A 1 {
			if (bdoom_debris) {
				for (int i = 3; i > 0; i--)
					A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
				for (int i = 4; i > 0; i--)
					A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
			}
		}
		stop;
	}
}
	
// Heavy punch puff — not only increases combo counter but also knocks non-flying enemies back
Class BD_ModernFistPuffHeavy : BD_ModernFistPuff {
	Default {
		+FORCEPAIN
		+HITTRACER
		attacksound "Mweapons/fist/heavypunch";
		seesound "Mweapons/fist/heavypunch";
	}
states	{
	Crash:
		TNT1 A 1 {
			if (bdoom_debris) {
				for (int i = 4; i > 0; i--)
					A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
				for (int i = 5; i > 0; i--)
					A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
			}
			if (target && target.player && target.player.readyweapon) {
				let weap = BDoomWeapon(target.player.readyweapon);
				if (weap)
					weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
			}
		}
		stop;
	melee:
		TNT1 A 1 {
			if(target) {
				let bdfist = BD_Fist (target.player.readyweapon);
				if (bdfist)
					bdfist.tcombo++;
			}
			if (tracer && (!tracer.bISMONSTER || tracer.bNOBLOOD))
				return ResolveState("Crash");
			return ResolveState("HitTracer");
			return ResolveState(null);
		}
		stop;
	HitTracer:
		TNT1 A 1 {
			if (tracer && tracer.bISMONSTER) {
				if (!tracer.bNOGRAVITY) //knock enemy back if they're non-flying (for flying enemies it would make fighting them only more inconvenient)
					tracer.vel.z += clamp(1 * 130 / tracer.mass, 0, 1.5);
				if (target) {
					tracer.vel += AngletoVector (target.AngleTo (tracer), 4);
					if (target.player && target.player.readyweapon) {
						let weap = BDoomWeapon(target.player.readyweapon);
						if (weap)
							weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
					}
				}
			}
		}
		stop;
	}		
}

Class BD_ModernFistPuffHeavy_Berserk : BD_ModernFistPuffHeavy {
	Default {
		-NOEXTREMEDEATH
		+EXTREMEDEATH
		decal "FistScorch";
		attacksound "Mweapons/fist/heavyhit";
		seesound "Mweapons/fist/heavyflesh";
	}
}

Class BD_ModernKickPuff : BD_ModernFistPuffHeavy {
	states	{
		Crash:
			TNT1 A 1 {
				if (bdoom_debris) {
					for (int i = 6; i > 0; i--)
						A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
					for (int i = 7; i > 0; i--)
						A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
				}
				if (target && target.player && target.player.readyweapon) {
					let weap = BDoomWeapon(target.player.readyweapon);
					if (weap)
						weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
				}
			}
			stop;	
		HitTracer:
			TNT1 A 1 {
				if (tracer) {
					if (!tracer.bNOGRAVITY)
						tracer.vel.z += clamp(1.5 * 130 / tracer.mass, 0.5, 3);
					if (target) {
						tracer.vel += AngletoVector (target.AngleTo (tracer), 5.5);
						if (target.player && target.player.readyweapon) {
							let weap = BDoomWeapon(target.player.readyweapon);
							if (weap)
								weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
						}
					}
				}
			}
			stop;
	}		
}

Class BD_ModernKickPuff_Berserk : BD_ModernKickPuff {
	Default {
		decal "KickScorchBerserk";
		-NOEXTREMEDEATH
		+EXTREMEDEATH
		attacksound "Mweapons/fist/heavyhit";
		seesound "Mweapons/fist/heavyflesh";
	}
	states	{
		melee:
			TNT1 A 0 {
				if(target) {
					let bdfist = BD_Fist (target.player.readyweapon);
					if (bdfist)
						bdfist.tcombo++;
				}
				A_AlertMonsters(256,AMF_EMITFROMTARGET);
				if (tracer && !tracer.bNOGRAVITY) {
					A_RadiusThrust(512,80,RTF_NOIMPACTDAMAGE,64);
					
				}				
				if (tracer) {
					if (tracer.bISMONSTER == false || tracer.bNOBLOOD == true)
						return ResolveState("Crash");
					return ResolveState(null);
				}
				return ResolveState(null);
			}
			TNT1 A 1 {
				if (tracer) {
					if (!tracer.bNOGRAVITY)
						tracer.vel.z += clamp(1.5 * 180 / tracer.mass, 1, 5);
					if (target) {
						tracer.vel += AngletoVector (target.AngleTo (tracer), 12);
						if (target.player && target.player.readyweapon) {
							let weap = BDoomWeapon(target.player.readyweapon);
							if (weap)
								weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
						}
					}
				}
			}
			stop;
	}		
}

Class BD_ModernFistPuffUppercut : BD_ModernFistPuffHeavy {
	default {
		seesound "Mweapons/fist/uppercut";
	}
	states { 
		Crash:
			TNT1 A 1 {
				if (bdoom_debris) {
					for (int i = 4; i > 0; i--)
						A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
					for (int i = 7; i > 0; i--)
						A_SpawnItemEx("BD_RicochetSpark",random(-3,3),random(-3,3),random(-1,1),	frandom(1,1.5),0,frandom(1,3.5),random(0,360),0,40);
					for (int i = 7; i > 0; i--)
						A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
				}
				if (target && target.player && target.player.readyweapon) {
					let weap = BDoomWeapon(target.player.readyweapon);
					if (weap)
						weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
				}
			}
			stop;
		Melee:
			TNT1 A 1 {
				if(target) {
					let bdfist = BD_Fist (target.player.readyweapon);
					if (bdfist)
						bdfist.tcombo++;
				}
				A_AlertMonsters(196,AMF_EMITFROMTARGET);
				if (tracer) {
					if (!tracer.bISMONSTER || tracer.bNOBLOOD)
						return ResolveState("Crash");
					if (!tracer.bNOGRAVITY)
						tracer.vel.z += clamp(7 * 120 / tracer.mass, 0, 9);
					if (target) {
						tracer.vel += AngleToVector (target.AngleTo (tracer), 0.5);
						if (target.player && target.player.readyweapon) {
							let weap = BDoomWeapon(target.player.readyweapon);
							if (weap)
								weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
						}
					}
				}
				return ResolveState(null);
			}
			stop;
	}
}

Class BD_ModernFistPuffUppercut_Berserk : BD_ModernFistPuffUppercut {
	Default {
		-NOEXTREMEDEATH
		+EXTREMEDEATH
		attacksound "Mweapons/fist/heavyhit";
		seesound "Mweapons/fist/heavyflesh";
	}
	states	{
		Crash:
			TNT1 A 1 {
				if (bdoom_debris) {
					for (int i = 6; i > 0; i--)
						A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
					for (int i = 11; i > 0; i--)
						A_SpawnItemEx("BD_RicochetSpark",random(-3,3),random(-3,3),random(-1,1),	frandom(1,1.5),0,frandom(1,3.5),random(0,360),0,40);
					for (int i = 7; i > 0; i--)
						A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
				}
				if (target && target.player && target.player.readyweapon) {
					let weap = BDoomWeapon(target.player.readyweapon);
					if (weap)
						weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
				}
			}
			stop;
		Melee:
			TNT1 A 1 {
				if(target) {
					let bdfist = BD_Fist (target.player.readyweapon);
					if (bdfist)
						bdfist.tcombo++; 
				}
				A_AlertMonsters(196,AMF_EMITFROMTARGET);
				if (tracer) {
					if (!tracer.bISMONSTER || tracer.bNOBLOOD)
						return ResolveState("Crash");
					if (!tracer.bNOGRAVITY)
						tracer.vel.z += clamp(9 * 120 / tracer.mass, 1, 14);
					if (target) {
						tracer.vel += AngleToVector (target.AngleTo (tracer), 5);
						if (target.player && target.player.readyweapon) {
							let weap = BDoomWeapon(target.player.readyweapon);
							if (weap)
								weap.BD_SetPitch(target.pitch+frandom(-2,2),SPF_INTERPOLATE);
						}
					}
				}
				return ResolveState(null);
			}
			stop;
	}
}

//// Vanilla/Enhanced Puffs

Class BD_FistPuff : BdoomPuff {
	Default {
		+PUFFGETSOWNER
		+PUFFONACTORS
		+NOEXTREMEDEATH
		+HITTRACER
		attacksound "Mweapons/fist/punch";
		seesound "Mweapons/fist/punch";
		mass 1;
	}
}

Class BD_FistPuff_Vanilla : BD_FistPuff {
	Default {
		attacksound "none";
		seesound "weapons/doompunch";
	}
}

Class BD_FistPuffStrong : BD_FistPuff{
	Default {
		decal "FistScorch";
		attacksound "Mweapons/fist/heavypunch";
		seesound "Mweapons/fist/heavypunch";
		-NOEXTREMEDEATH
	}
	states	{
	Crash:
		TNT1 A 1 {
			if (bdoom_debris) {
				for (int i = 4; i > 0; i--)
					A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
				for (int i = 7; i > 0; i--)
					A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
			}
		}
		stop;
	}
}

Class BD_KickPuff : BD_FistPuff {
	Default {
		attacksound "weapons/kick/hit";
		seesound "weapons/kick/hit";
	}
	states	{
	Crash:
		TNT1 A 1 {
			if (bdoom_debris) {
				for (int i = 5; i > 0; i--)
					A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
				for (int i = 6; i > 0; i--)
					A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
			}
		}
	Melee:
		TNT1 A 1 { 
			A_AlertMonsters(256,AMF_EMITFROMTARGET);
			if (tracer && !tracer.bNOGRAVITY) {
				A_RadiusThrust(2500,80,RTF_THRUSTZ|RTF_NOIMPACTDAMAGE,64);				
			}
		}			
		stop;
	}
}


Class BD_KickPuffStrong : BD_FistPuffStrong {
	Default {
		decal "KickScorchBerserk";
	}
	states {
	Crash:
		TNT1 A 1 {
			if (bdoom_debris) {
				for (int i = 6; i > 0; i--)
					A_SpawnItemEx("BD_WallSmoke",frandom(-3,3),frandom(-3,3),frandom(-1,1),frandom(-0.3,0.3),frandom(-0.3,0.3),frandom(-0.3,0.3),0,0,32);
				for (int i = 10; i > 0; i--)
					A_SpawnItemEx("BD_WallPart",0,0,0,	frandom(2,5),0,frandom(2,4),	random(0,360),0,64);
			}
		}
		stop;
	Melee:
		TNT1 A 1 {
			A_AlertMonsters(512,AMF_EMITFROMTARGET);
			if (tracer && !tracer.bNOGRAVITY) {
				A_RadiusThrust(5000,120,RTF_THRUSTZ,80);				
			}			
		}
		stop;
	}
}

//// BERSERK

Class BD_OverlayControl : CustomInventory {	
	private double aalpha;
	private BD_ModernBerserk_Regen mregen;
	Default	{
		+INVENTORY.UNDROPPABLE
		+INVENTORY.UNTOSSABLE
		+INVENTORY.UNCLEARABLE
		+INVENTORY.AUTOACTIVATE
		inventory.maxamount 1;
	}
	override void Tick() {}
	override void DoEffect() {
		super.DoEffect();
		if (!owner)
			return;
		if (!mregen)
			mregen = BD_ModernBerserk_Regen(owner.FindInventory("BD_ModernBerserk_Regen"));
	}
	states {
	Use:
		TNT1 A 1 {
			A_Overlay(-999,"OverlayControl");
		}
		wait;
	OverlayControl:
		TNT1 A 1 {
			if (FindInventory("BD_ModernBerserk_Regen")) {
				let psp = player.FindPSprite(PSP_Weapon);
				let bers = player.FindPSprite(500);
				if(!psp || bdoom_weapons != 2 || bers) // Player dead or overlay already active
					return ResolveState(null);
				A_Overlay(500,"BerserkOverlay",true);
				A_OverlayFlags(500,PSPF_ALPHA|PSPF_FORCEALPHA,true);
				A_OverlayFlags(500,PSPF_ADDWEAPON|PSPF_ADDBOB,false);					
				invoker.aalpha = 0.15;
			}
			return ResolveState(null);
		}
		loop;
	BerserkOverlay:
		TNT1 A 0 {
			if (invoker.mregen && invoker.mregen.EffectTics <= 175)
				A_StartSound("world/heartbeat",slot:CHAN_VOICE);
		}
		BDOL BBBBBBBBBBBBBBB 1 {
			int mul = (invoker.mregen && invoker.mregen.EffectTics <= 175) ? 2 : 1;
			invoker.aalpha = clamp(invoker.aalpha+0.0066*mul,0.0,0.8);
			A_OverlayAlpha(OverlayID(),invoker.aalpha);
		}
		BDOL BBBBBBBBBBBBBBBBBBBB 1 {
			int mul = (invoker.mregen && invoker.mregen.EffectTics <= 175) ? 2.8 : 1;
			invoker.aalpha = clamp(invoker.aalpha-0.005*mul,0.0,0.8);
			A_OverlayAlpha(OverlayID(),invoker.aalpha);
		}
		TNT1 A 0 A_JumpIf(invoker.mregen && invoker.mregen.EffectTics > 0,"BerserkOverlay");
		stop;
	}
}

Class BD_Berserk : CustomInventory  {	
	Default	{
		+COUNTITEM
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.ISHEALTH
		Inventory.PickupMessage "$GOTBERSERK";
		inventory.pickupsound "pickups/berserk";
	}
	States {
	Spawn:
		PSTR A -1;
		Stop;
	Pickup:
		TNT1 A 0 {
			if (bdoom_weapons == BD_WeaponSet.WS_MODERN) {
				A_GiveInventory("BD_ModernBerserk_Regen");
				A_GiveInventory("BD_ModernBerserk_Speed");
				A_GiveInventory("BD_ModernBerserk_Protection");
				if (!FindInventory("BD_OverlayControl"))
					GiveInventory("BD_OverlayControl",1);
				let cont = BD_OverlayControl(FindInventory("BD_OverlayControl"));
			}
			A_GiveInventory("PowerStrength");
			HealThing(100, 0);
			if (!FindInventory("BD_Fist"))
				A_GiveInventory("BD_Fist");
			if (player.readyweapon != Weapon(FindInventory("BD_Fist")))
				player.pendingweapon = Weapon(FindInventory("BD_Fist"));
		}
		stop;
	}
}

Class BD_ModernBerserk_Regen : PowerRegeneration {
	private int counter;
	Default {
		powerup.duration -40;
		powerup.strength 5;
		//powerup.color "00 00 00";
	}
}

Class BD_ModernBerserk_Speed : PowerSpeed {
	Default {
		powerup.duration -40;
		speed 1.3;
		//powerup.color "00 00 00";
	}
}

Class BD_ModernBerserk_Protection : PowerProtection {
	Default {
		+NOPAIN;
		powerup.duration -40;
		Damagefactor 0.5;
		//powerup.color "00 00 00";
	}
}
