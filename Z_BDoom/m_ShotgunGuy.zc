Class BD_ShotgunGuy : BDoomMonster {
	Default {
		species "ShotgunGuy";
		+DOHARMSPECIES
		Health 30;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		Monster;
		+FLOORCLIP
		SeeSound "shotguy/sight";
		AttackSound "none";
		PainSound "shotguy/pain";
		DeathSound "shotguy/death";
		ActiveSound "shotguy/active";
		Obituary "$OB_SHOTGUY";
		Tag "$FN_SHOTGUN";
		DropItem "Shotgun";
		BDoomMonster.monsterclip 8;
	}
	
	void ModernSergeantAttack() {
		BD_ModernBulletAttack(
			"BD_ZombiePellet", 
			bulletheight:30, bulletofs_xy:8,
			horz_spread: 20, vert_spread: 1.5,
			numbullets: 6,
			attacksound: "Mweapons/shotgun/fire"
		);
	}
	
	state SergeantMissileEnd() {
		if (monsterclip == 0)
			return ResolveState("Reload");
		else if (target && Distance2D(target) > 512)
			return ResolveState("See");
		return ResolveState(null);
	}
	
	state SergeantReloadShell() {
		A_StartSound("Mweapons/shotgun/shellin");
		if (monsterclip <8)
			monsterclip++;
		else {
			bFRIGHTENED = false;
			return ResolveState("See");
		}
		return ResolveState(null);
	}
	
	states {
	Spawn:
		SARR AB 10 A_Look();
		loop;
	See:
	    SPO1 ABCDDCBA 3 A_Chase();
		loop; 	
	Crush:
		CRS1 A -1;
		stop;
	Missile:	
		TNT1 A 0 A_Jumpif(bdoom_replaceweapons && bdoom_weapons == BD_WeaponSet.WS_MODERN,"MissileModern")	;
		SPSR A 5 A_FaceTarget();
		SPSR C 2 A_FaceTarget();
		SPO1 E 3 A_FaceTarget();
		SPO1 F 4 BD_BulletAttack(22.5, 0, 3, random(1,5)*3,"shotguy/attack","weapons/shotgun/fire","none",0,0,30,8);
		SPO1 F 4;
		SPO1 E 3;
		SPSR C 3;
		SPSR A 3;
		SPSR B 4 {
			if (bdoom_weapons == BD_WeaponSet.WS_ENHANCED)
				A_StartSound("weapons/shotgun/pump",slot:CHAN_5);
			If(bdoom_debris)
				A_SpawnItemEx("BD_ShotgunCasing",0,0,28,		frandom(2,4),0,random(2,4),	random(-30,-40),SXF_SETTARGET);
		}
		SPSR A 3;
		goto See;
	MissileModern:		
		SPSR A 5 A_FaceTarget();
		SPSR C 2 A_FaceTarget();
		SPO1 E 3 A_FaceTarget();
	MissileModernDo:
		SPO1 F 4 ModernSergeantAttack();
		SPO1 E 3;
		SPSR CA 3;
		SPSR B 3 {
			A_StartSound("Mweapons/shotgun/pump",slot:CHAN_5);
			if (bdoom_debris)
				A_SpawnItemEx(
					"BD_ShotgunCasing",
					0,0,28,
					frandom[sfx](2,4),0,random[sfx](2,4),
					frandom[sfx](-30,-40),
					SXF_SETTARGET
				);
		}
		SPSR AC 4;
		SPO1 E 15 SergeantMissileEnd();
		SPO1 E 15;
		TNT1 A 0 BD_Refire(96,"See");
		goto MissileModernDo;
	Reload:
		TNT1 A 0 {
			bFRIGHTENED = true;
		}
	    SPO1 ABCDDCBA 3 A_Chase(null,null);
	ReloadDo:
		TNT1 A 0 SergeantReloadShell();
	    SPO1 ABCD 3 A_Chase(null,null);
		TNT1 A 0 SergeantReloadShell();
	    SPO1 DCBA 3 A_Chase(null,null);
		loop;
	Pain:
		SSPA a 3;
		SSPA b 3 a_pain();
		goto see;
	Death:
		TNT1 A 0 {
			if (hitheight > default.height*0.75) {
				if (bdoom_gibs && random(1,3) == 3 && !burning)
					return ResolveState("DeathHeadshot");
				return ResolveState("DeathHeadshot1");
			}
			else if (random(1,2) == 2)
				return ResolveState("Death1");
			return ResolveState(null);
		}
	Death.Vanilla:
		SPOM A 3 {
			A_Scream();
			BD_Bleed();
		}
		SPOM B 3 {
			A_NoBlocking();
			BD_Bleed();
		}
		SPOM CDEFG 3;
		SPOM H 3;
		SPOM I 1;
		goto deathbleed;
	Death1: //fall forward
		SPON A 3 BD_Bleed();
		SPON B 3 A_Scream();
		SPON C 3 {
			A_NoBlocking();
			BD_Bleed();
		}
		SPON D 3 BD_Bleed();
		SPON EFGHI 3;
		SPON JKL 4;
		SPON M 1;
		goto deathbleed;
	DeathHeadshot: //fall left/right
		TNT1 A 0 { 
			scale.x *= randompick[bdsfx](-1,1);
			A_Scream();
		}
		SPOO ABC 2 {
			if (bdoom_blood && !burning)
				A_SpawnItemEx("BD_Blood",random(-2,2),0,random(32,34),	random(4,6),0,random(3,5),random(-70,-90)*scale.x,SXF_SETTARGET);
		}
		TNT1 A 0 A_NoBlocking();
		SPOO DEF 3 {
			if (bdoom_blood && !burning)
				A_SpawnItemEx("BD_Blood",random(-2,2),0,random(24,26),	random(4,6),0,random(3,5),random(-70,-90)*scale.x,SXF_SETTARGET);
		}
		SPOO GHI 3 {
			if (bdoom_blood && !burning)
				A_SpawnItemEx("BD_Blood",random(-2,2),0,random(10,16),	random(4,6),0,random(3,5),random(-70,-90)*scale.x,SXF_SETTARGET);
		}
		SPOO KLM 3;
		SPOO N 1;
		goto deathbleed;
	DeathHeadshot1:
		SPOD A 3 {
			if (bdoom_gibs)
				A_SpawnItemEx("BD_Gib_Head",frandom(-1,1),frandom(-1,1),52,frandom(2,5),0,frandom(1,5),random(150,210),SXF_SETTARGET);
		}
		SPOD B 3 BD_Bleed();
		SPOD C 3 A_NoBlocking();
		SPOD DE 3 {
			if (bdoom_blood && !burning)
				A_SpawnItemEx("BD_Blood",0,0,	random(48,52),	random(0,2),random(0,2),random(4,6),0,SXF_SETTARGET,96);
		}
		SPOD LLMMLM random(7,11) {
			if (bdoom_blood && random(0,100) < 40) {
				A_StartSound("gibs/bloodspurt");
				A_SpawnItemEx("BD_NeckSpurt",frandom(-0.3,0.3),frandom(-0.3,0.3),33,0,0,0,random(0,359),SXF_SETTARGET);
			}
		}
		SPOD FG 2;
		SPOD HIJ 3;
		SPOD K 3 A_StartSound("body/fall");
		goto deathbleed;
	Death.Saw:	
		SPOY ABC 3;
		SPOY D 3 {
			A_StartSound("body/fall");
			A_NoBlocking();
		}
		TNT1 A 0 A_FaceTarget();
		SPOY EFGH 3 {
			if (bdoom_blood)
				A_SpawnItemEx("BD_Blood",1,0,frandom(18,42),frandom(2,4),0,frandom(4,6),random(-10,-15),SXF_SETTARGET);
		}
		SPOY IJKLM 4;
		SPOY OP 3;
		SPOY Q 2 {
			A_StartSound("gibs/meatland",slot:CHAN_7);
			A_StartSound("body/fall",slot:CHAN_6);
		}
		SPOY R 3;
		SPOY S 2 {
			A_StartSound("gibs/meatland",slot:CHAN_7);
			A_StartSound("body/fall",slot:CHAN_6);
		}
		SPOY TUVWXY 2;
		goto deathbleed;
		
	XDeath:
		TNT1 A 0 A_JumpIf(bdoom_gibs == true,"XDeath.Particles");
	XDeath.Vanilla:
		SGIB ab 2;
		SGIB cd 2 A_XScream();
		SGIB e 2 A_NoBlocking();
		SGIB f 2;
		SGIB ghijklmnopq 2;
		goto deathbleed;
	}
}